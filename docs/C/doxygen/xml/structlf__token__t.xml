<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structlf__token__t" kind="struct" language="C++" prot="public">
    <compoundname>lf_token_t</compoundname>
    <includes refid="reactor_8h" local="no">reactor.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structlf__token__t_1a96f790f8f8dcc01474dbc255e05ceaa8" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* lf_token_t::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to dynamically allocated memory containing a message. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" line="394" column="10" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlf__token__t_1af2b9d91b8dcfbc640f0cf52d4fac6035" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lf_token_t::element_size</definition>
        <argsstring></argsstring>
        <name>element_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of the struct or array element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" line="396" column="12" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlf__token__t_1aa907a3d0901bd1ae3ab88fecb8dc11e5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int lf_token_t::length</definition>
        <argsstring></argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Length of the array or 1 for a struct. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" line="398" column="9" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlf__token__t_1ab1043c1cbbd70a0cb0d10058b3d5290b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int lf_token_t::ref_count</definition>
        <argsstring></argsstring>
        <name>ref_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of input ports that have not already reacted to the message. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" line="400" column="9" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlf__token__t_1aa002374ec3b3165193393952dd216a90" prot="public" static="no" mutable="no">
        <type>ok_to_free_t</type>
        <definition>ok_to_free_t lf_token_t::ok_to_free</definition>
        <argsstring></argsstring>
        <name>ok_to_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicator of whether this token is expected to be freed. Tokens that are created at the start of execution and associated with output ports or actions are not expected to be freed. They can be reused instead. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" line="406" column="18" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlf__token__t_1a3b993d54120f7b0137785c99f7ddc118" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structlf__token__t" kindref="compound">lf_token_t</ref> *</type>
        <definition>struct lf_token_t* lf_token_t::next_free</definition>
        <argsstring></argsstring>
        <name>next_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For recycling, a pointer to the next token in the recycling bin. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" line="408" column="22" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Token type for dynamically allocated arrays and structs sent as messages.</para>
<para>In the C LF target, a type for an output that ends in &apos;*&apos; is treated specially. The value carried by the output is assumed to be in dynamically allocated memory, and, using reference counting, after the last downstream reader of the value has finished, the memory will be freed. To prevent this freeing from occurring, the output type can be specified using the syntax {= type* =}; this will not be treated as dynamically allocated memory. Alternatively, the programmer can give a typedef in the preamble that masks the trailing *.</para>
<para>This struct is the wrapper around the dynamically allocated memory that carries the message. The message can be an array of values, where the size of each value is element_size (in bytes). If it is not an array, the length == 1. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>lf_token_t</label>
        <link refid="structlf__token__t"/>
        <childnode refid="1" relation="usage">
          <edgelabel>next_free</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" line="392" column="25" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/reactor.h" bodystart="392" bodyend="409"/>
    <listofallmembers>
      <member refid="structlf__token__t_1af2b9d91b8dcfbc640f0cf52d4fac6035" prot="public" virt="non-virtual"><scope>lf_token_t</scope><name>element_size</name></member>
      <member refid="structlf__token__t_1aa907a3d0901bd1ae3ab88fecb8dc11e5" prot="public" virt="non-virtual"><scope>lf_token_t</scope><name>length</name></member>
      <member refid="structlf__token__t_1a3b993d54120f7b0137785c99f7ddc118" prot="public" virt="non-virtual"><scope>lf_token_t</scope><name>next_free</name></member>
      <member refid="structlf__token__t_1aa002374ec3b3165193393952dd216a90" prot="public" virt="non-virtual"><scope>lf_token_t</scope><name>ok_to_free</name></member>
      <member refid="structlf__token__t_1ab1043c1cbbd70a0cb0d10058b3d5290b" prot="public" virt="non-virtual"><scope>lf_token_t</scope><name>ref_count</name></member>
      <member refid="structlf__token__t_1a96f790f8f8dcc01474dbc255e05ceaa8" prot="public" virt="non-virtual"><scope>lf_token_t</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
