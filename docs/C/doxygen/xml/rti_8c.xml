<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="rti_8c" kind="file" language="C++">
    <compoundname>rti.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">netinet/in.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">netdb.h</includes>
    <includes local="no">strings.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">sys/wait.h</includes>
    <includes refid="util_8c" local="yes">util.c</includes>
    <includes refid="net__util_8c" local="yes">net_util.c</includes>
    <includes refid="rti_8h" local="yes">rti.h</includes>
    <includes refid="tag_8c" local="yes">tag.c</includes>
    <incdepgraph>
      <node id="27">
        <label>stdbool.h</label>
      </node>
      <node id="14">
        <label>util.c</label>
        <link refid="util_8c"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>pqueue.h</label>
        <link refid="pqueue_8h"/>
      </node>
      <node id="15">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>netinet/in.h</label>
      </node>
      <node id="8">
        <label>arpa/inet.h</label>
      </node>
      <node id="12">
        <label>assert.h</label>
      </node>
      <node id="30">
        <label>trace.h</label>
        <link refid="trace_8h"/>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>errno.h</label>
      </node>
      <node id="21">
        <label>platform.h</label>
        <link refid="platform_8h_source"/>
      </node>
      <node id="31">
        <label>tag.c</label>
        <link refid="tag_8c"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>tag.h</label>
        <link refid="tag_8h"/>
      </node>
      <node id="10">
        <label>netdb.h</label>
      </node>
      <node id="28">
        <label>limits.h</label>
      </node>
      <node id="19">
        <label>net_util.c</label>
        <link refid="net__util_8c"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>net_util.h</label>
        <link refid="net__util_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>pthread.h</label>
      </node>
      <node id="6">
        <label>sys/types.h</label>
      </node>
      <node id="17">
        <label>string.h</label>
      </node>
      <node id="1">
        <label>/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c</label>
        <link refid="rti_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>rti.h</label>
        <link refid="rti_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>unistd.h</label>
      </node>
      <node id="26">
        <label>reactor.h</label>
        <link refid="reactor_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>time.h</label>
      </node>
      <node id="23">
        <label>math.h</label>
      </node>
      <node id="13">
        <label>sys/wait.h</label>
      </node>
      <node id="11">
        <label>strings.h</label>
      </node>
      <node id="5">
        <label>sys/socket.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="rti_8c_1a0e29301d48ec93a24b9524ba839dfbd3" prot="public" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t rti_mutex</definition>
        <argsstring></argsstring>
        <name>rti_mutex</name>
        <initializer>= PTHREAD_MUTEX_INITIALIZER</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="63" column="17" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1acf8982417c353ae4d77e926c75cba5d0" prot="public" static="no" mutable="no">
        <type>pthread_cond_t</type>
        <definition>pthread_cond_t received_start_times</definition>
        <argsstring></argsstring>
        <name>received_start_times</name>
        <initializer>= PTHREAD_COND_INITIALIZER</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="66" column="16" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1a2a3dc30cfbdd8e445b5a17b29793a951" prot="public" static="no" mutable="no">
        <type>pthread_cond_t</type>
        <definition>pthread_cond_t sent_start_time</definition>
        <argsstring></argsstring>
        <name>sent_start_time</name>
        <initializer>= PTHREAD_COND_INITIALIZER</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="69" column="16" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1a189c908078166a76020df50b313b0600" prot="public" static="no" mutable="no">
        <type><ref refid="structtag__t" kindref="compound">tag_t</ref></type>
        <definition>tag_t max_stop_tag</definition>
        <argsstring></argsstring>
        <name>max_stop_tag</name>
        <initializer>= NEVER_TAG</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="72" column="7" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1a496f66d1ae78be380abec7236a978ad4" prot="public" static="no" mutable="no">
        <type><ref refid="structfederate__t" kindref="compound">federate_t</ref></type>
        <definition>federate_t federates[NUMBER_OF_FEDERATES]</definition>
        <argsstring>[NUMBER_OF_FEDERATES]</argsstring>
        <name>federates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="75" column="12" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1a6b2a701d398b11837acce347b022f769" prot="public" static="no" mutable="no">
        <type><ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref></type>
        <definition>instant_t max_start_time</definition>
        <argsstring></argsstring>
        <name>max_start_time</name>
        <initializer>= 0LL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="78" column="11" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1a340a7f03644ae69155d84565dc0e31e5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int num_feds_proposed_start</definition>
        <argsstring></argsstring>
        <name>num_feds_proposed_start</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="81" column="5" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1a9932ef3b765c33aa9b29d554e504f466" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int num_feds_handling_stop</definition>
        <argsstring></argsstring>
        <name>num_feds_handling_stop</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="84" column="5" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1a4d05fa7465d7e249d313bc8a943f48f6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>volatile bool all_federates_exited</definition>
        <argsstring></argsstring>
        <name>all_federates_exited</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Boolean indicating that all federates have exited. This gets set to true exactly once before the program exits. It is marked volatile because the write is not guarded by a mutex. The main thread makes this true, then calls shutdown and close on the socket, which will cause accept() to return with an error code in <ref refid="rti_8c_1a846f2f3985a60f5a7eef15b4430817d8" kindref="member">respond_to_erroneous_connections()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="94" column="15" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1afb7337572879824d012d59222ea86eeb" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* federation_id</definition>
        <argsstring></argsstring>
        <name>federation_id</name>
        <initializer>= &quot;Unidentified Federation&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The ID of the federation that this RTI will supervise. This should be overridden with a command-line -i option to ensure that each federate only joins its assigned federation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="101" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1a2fea97e0af4aff638a2cd067e924c6f4" prot="public" static="no" mutable="no">
        <type><ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref></type>
        <definition>ushort final_port_TCP</definition>
        <argsstring></argsstring>
        <name>final_port_TCP</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The final port number that the TCP socket server ends up using. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="105" column="8" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1a932b0f404c230fc102373b565ad39084" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int socket_descriptor_TCP</definition>
        <argsstring></argsstring>
        <name>socket_descriptor_TCP</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The TCP socket descriptor for the socket server. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="108" column="5" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1aa409f62f662e5e53ee756ffaff4bddff" prot="public" static="no" mutable="no">
        <type><ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref></type>
        <definition>ushort final_port_UDP</definition>
        <argsstring></argsstring>
        <name>final_port_UDP</name>
        <initializer>= USHRT_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The final port number that the UDP socket server ends up using. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="112" column="8" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1a441e2e84bdd5cb0bc229623741d2bbed" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int socket_descriptor_UDP</definition>
        <argsstring></argsstring>
        <name>socket_descriptor_UDP</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The UDP socket descriptor for the socket server. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="115" column="5" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rti_8c_1a94849214863f76b3f7c59a78bd2ad624" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _lf_rti_stop_granted_already_sent_to_federates</definition>
        <argsstring></argsstring>
        <name>_lf_rti_stop_granted_already_sent_to_federates</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Boolean used to prevent the RTI from sending the STOP_GRANTED message multiple times. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="827" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="827" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="rti_8c_1a884fcf0013b25e1f15ebefacec2b1f94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lf_rti_mark_federate_requesting_stop</definition>
        <argsstring>(federate_t *fed)</argsstring>
        <name>_lf_rti_mark_federate_requesting_stop</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>fed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark a federate requesting stop.</para>
<para>If the number of federates handling stop reaches the NUM_OF_FEDERATES, broadcast STOP_GRANTED to every federate.</para>
<para>This function assumes the rti_mutex is already locked.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fed</parametername>
</parameternamelist>
<parameterdescription>
<para>The federate that has requested a stop or has suddenly stopped (disconnected). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="875" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="875" bodyend="887" declfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" declline="131" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a8ca2d23d4d68874c4bf48559ed2362ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int create_server</definition>
        <argsstring>(int specified_port, ushort port, socket_type_t socket_type)</argsstring>
        <name>create_server</name>
        <param>
          <type>int</type>
          <declname>specified_port</declname>
        </param>
        <param>
          <type><ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref></type>
          <declname>port</declname>
        </param>
        <param>
          <type>socket_type_t</type>
          <declname>socket_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a server and enable listening for socket connections.</para>
<para><simplesect kind="note"><para>This function is similar to create_server(...) in <ref refid="federate_8c" kindref="compound">federate.c</ref>. However, it contains logs that are specific to the RTI.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The port number to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>socket_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the socket for the server (TCP or UDP). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The socket descriptor on which to accept connections. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="144" column="5" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="144" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a6696c6969eb341c48269c2da6cec0caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_port_absent_message</definition>
        <argsstring>(federate_t *sending_federate, unsigned char *buffer)</argsstring>
        <name>handle_port_absent_message</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>sending_federate</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle a port absent message being received rom a federate via the RIT. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="262" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="262" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1afc6a599f3f5b9cf66a147b0f9ca657c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_timed_message</definition>
        <argsstring>(federate_t *sending_federate, unsigned char *buffer)</argsstring>
        <name>handle_timed_message</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>sending_federate</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle a timed message being received from a federate via the RTI. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sending_federate</parametername>
</parameternamelist>
<parameterdescription>
<para>The sending federate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to read into (the first byte is already there). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="309" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="309" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a2c94ce50b24ed5cc0bfce3d548d8e59f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void send_tag_advance_grant</definition>
        <argsstring>(federate_t *fed, tag_t tag)</argsstring>
        <name>send_tag_advance_grant</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>fed</declname>
        </param>
        <param>
          <type><ref refid="structtag__t" kindref="compound">tag_t</ref></type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a tag advance grant (TAG) message to the specified federate. Do not send it if a previously sent PTAG was greater or if a previously sent TAG was greater or equal.</para>
<para>This function will keep a record of this TAG in the federate&apos;s last_granted field.</para>
<para>This function assumes that the caller holds the mutex lock.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fed</parametername>
</parameternamelist>
<parameterdescription>
<para>The federate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>The tag to grant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="406" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="406" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1aa067d8ff2e12b42f8c1f011758231be1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtag__t" kindref="compound">tag_t</ref></type>
        <definition>tag_t transitive_next_event</definition>
        <argsstring>(federate_t *fed, tag_t candidate, bool visited[])</argsstring>
        <name>transitive_next_event</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>fed</declname>
        </param>
        <param>
          <type><ref refid="structtag__t" kindref="compound">tag_t</ref></type>
          <declname>candidate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>visited</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the earliest tag at which the specified federate may experience its next event. This is the least next event tag (NET) or time advance notice (TAN) of the specified federate and (transitively) upstream federates (with delays of the connections added). For upstream federates, we assume (conservatively) that federate upstream of those may also send an event. The result will never be less than the completion time of the federate (which may be NEVER, if the federate has not yet completed a logical time).</para>
<para>FIXME: This could be made less conservative by building at code generation time a causality interface table indicating which outputs can be triggered by which inputs. For now, we assume any output can be triggered by any input.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fed</parametername>
</parameternamelist>
<parameterdescription>
<para>The federate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>candidate</parametername>
</parameternamelist>
<parameterdescription>
<para>A candidate tag (for the first invocation, this should be fed-&gt;next_event). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>visited</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of booleans indicating which federates have been visited (for the first invocation, this should be an array of falses of size NUMBER_OF_FEDERATES). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="459" column="7" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="459" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1ab36a04086b8af885621e5f808efecd23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void send_provisional_tag_advance_grant</definition>
        <argsstring>(federate_t *fed, tag_t tag)</argsstring>
        <name>send_provisional_tag_advance_grant</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>fed</declname>
        </param>
        <param>
          <type><ref refid="structtag__t" kindref="compound">tag_t</ref></type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a provisional tag advance grant (PTAG) message to the specified federate. Do not send it if a previously sent PTAG or TAG was greater or equal.</para>
<para>This function will keep a record of this PTAG in the federate&apos;s last_provisionally_granted field.</para>
<para>This function assumes that the caller holds the mutex lock.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fed</parametername>
</parameternamelist>
<parameterdescription>
<para>The federate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>The tag to grant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="513" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="513" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a9322b3f6a014743c6447dccabe485db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool send_tag_advance_if_appropriate</definition>
        <argsstring>(federate_t *fed)</argsstring>
        <name>send_tag_advance_if_appropriate</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>fed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine whether the specified federate fed is eligible for a tag advance grant, (TAG) and, if so, send it one. This is called upon receiving a LTC, TAN, NET or resign from an upstream federate.</para>
<para>This function calculates the minimum M over all upstream federates of the &quot;after&quot; delay plus the most recently received LTC from that federate. If M is greater than the most recently sent TAG to fed or greater than or equal to the most recently sent PTAG, then send a TAG(M) to fed and return.</para>
<para>If the above conditions do not result in sending a TAG, then find the minimum M of the earliest possible future message from upstream federates. This is calculated by transitively looking at the most recently received NET message from upstream federates. If M is greater than the NET of the federate fed or the most recently sent PTAG to that federate, then send TAG to the federate with tag equal to the NET of fed or the PTAG. If M is equal to the NET of the federate, then send PTAG(M).</para>
<para>This should be called whenever an immediately upstream federate sends to the RTI an LTC (Logical Tag Complete), or when a transitive upstream federate sends a TAN (Time Advance Notice) or a NET (Next Event Tag) message. It is also called when an upstream federate resigns from the federation.</para>
<para>This function assumes that the caller holds the mutex lock.</para>
<para><simplesect kind="return"><para>True if the TAG message is sent and false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="602" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="602" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a6bba97c8acc2b80259f8b94b01e1697d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_logical_tag_complete</definition>
        <argsstring>(federate_t *fed)</argsstring>
        <name>handle_logical_tag_complete</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>fed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle a logical tag complete (LTC) message. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fed</parametername>
</parameternamelist>
<parameterdescription>
<para>The federate that has completed a logical tag. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="704" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="704" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1ad3d3a13c504c13abe514b40d46c19cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transitive_send_TAG_if_appropriate</definition>
        <argsstring>(federate_t *fed, bool visited[])</argsstring>
        <name>transitive_send_TAG_if_appropriate</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>fed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>visited</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For all federates transitively downstream of the specified federate, determine whether they should be sent a TAG or PTAG and send it if so.</para>
<para>This assumes the caller holds the mutex.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fed</parametername>
</parameternamelist>
<parameterdescription>
<para>The upstream federate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>visited</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of booleans used to determine whether a federate has been visited (initially all false). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="738" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="738" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a77dee2c405d4fe62278a1cf972272bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_next_event_tag</definition>
        <argsstring>(federate_t *fed)</argsstring>
        <name>handle_next_event_tag</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>fed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle a next event tag (NET) message. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fed</parametername>
</parameternamelist>
<parameterdescription>
<para>The federate sending a NET message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="752" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="752" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a2933ca68bad3d299217a22106b120a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_time_advance_notice</definition>
        <argsstring>(federate_t *fed)</argsstring>
        <name>handle_time_advance_notice</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>fed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle a time advance notice (TAN) message. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fed</parametername>
</parameternamelist>
<parameterdescription>
<para>The federate sending a TAN message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="786" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="786" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a4d99ea51641cde8d7d65c06e43581f19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lf_rti_broadcast_stop_time_to_federates_already_locked</definition>
        <argsstring>()</argsstring>
        <name>_lf_rti_broadcast_stop_time_to_federates_already_locked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Once the RTI has seen proposed tags from all connected federates, it will broadcast a STOP_GRANTED carrying the max_stop_tag. This function also checks the most recently received NET from each federate and resets that be no greater than the max_stop_tag.</para>
<para>This function assumes the caller holds the rti_mutex lock. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="837" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="837" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a76bea17520db7f471b8a04d20c7db5f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_stop_request_message</definition>
        <argsstring>(federate_t *fed)</argsstring>
        <name>handle_stop_request_message</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>fed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle a STOP_REQUEST message. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fed</parametername>
</parameternamelist>
<parameterdescription>
<para>The federate sending a STOP_REQUEST message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="893" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="893" bodyend="958"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1aa21c2b5333b021d6308a807c1f9e8844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_stop_request_reply</definition>
        <argsstring>(federate_t *fed)</argsstring>
        <name>handle_stop_request_reply</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>fed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle a STOP_REQUEST_REPLY message. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fed</parametername>
</parameternamelist>
<parameterdescription>
<para>The federate replying the STOP_REQUEST </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="964" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="964" bodyend="986"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1ad656484a8676e0e0917e747aa879dfcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_address_query</definition>
        <argsstring>(ushort fed_id)</argsstring>
        <name>handle_address_query</name>
        <param>
          <type><ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref></type>
          <declname>fed_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle address query messages. This function reads the body of a ADDRESS_QUERY (<simplesect kind="see"><para><ref refid="rti_8h" kindref="compound">rti.h</ref>) message which is the requested destination federate ID and replies with the stored port value for the socket server of that federate. The port values are initialized to -1. If no <ref refid="rti_8h_1a4f0f800c091729c481a6ce0f3bac4ca4" kindref="member">ADDRESS_AD</ref> message has been received from the destination federate, the RTI will simply reply with -1 for the port. The sending federate is responsible for checking back with the RTI after a period of time. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="federate_8c_1ae531b26446e581af75969ca6d9dc71f5" kindref="member">connect_to_federate()</ref> in <ref refid="federate_8c" kindref="compound">federate.c</ref>. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fed_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The federate sending a ADDRESS_QUERY message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1001" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1001" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1afff97113d09ec861260d1ea041fe20c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_address_ad</definition>
        <argsstring>(ushort federate_id)</argsstring>
        <name>handle_address_ad</name>
        <param>
          <type><ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref></type>
          <declname>federate_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle address advertisement messages (<simplesect kind="see"><para><ref refid="rti_8h_1a4f0f800c091729c481a6ce0f3bac4ca4" kindref="member">ADDRESS_AD</ref> in <ref refid="rti_8h" kindref="compound">rti.h</ref>). The federate is expected to send its server port number as the next byte. The RTI will keep a record of this number in the .server_port field of the federates[federate_id] array of structs.</para>
</simplesect>
The server_hostname and server_ip_addr fields are assigned in <ref refid="rti_8c_1acf8907ccab075522f7b84de579d50030" kindref="member">connect_to_federates()</ref> upon accepting the socket from the remote federate.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>federate_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the remote federate that is sending the address advertisement. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1048" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1048" bodyend="1067"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a9cf552da2c0c98857a8f772fe19c4e9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_timestamp</definition>
        <argsstring>(federate_t *my_fed)</argsstring>
        <name>handle_timestamp</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>my_fed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A function to handle timestamp messages. This function assumes the caller does not hold the mutex. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1073" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1073" bodyend="1126"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1ae65499dda32878c5d123206e37732bf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lf_rti_send_physical_clock</definition>
        <argsstring>(unsigned char message_type, federate_t *fed, socket_type_t socket_type)</argsstring>
        <name>_lf_rti_send_physical_clock</name>
        <param>
          <type>unsigned char</type>
          <declname>message_type</declname>
        </param>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>fed</declname>
        </param>
        <param>
          <type>socket_type_t</type>
          <declname>socket_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Take a snapshot of the physical clock time and send it to federate fed_id.</para>
<para>This version assumes the caller holds the mutex lock.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the clock sync message (see <ref refid="rti_8h" kindref="compound">rti.h</ref>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fed</parametername>
</parameternamelist>
<parameterdescription>
<para>The federate to send the physical time to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>socket_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The socket type (TCP or UDP). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1138" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1138" bodyend="1171"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1ac5c5af408abe8a53506b2fb406046e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_physical_clock_sync_message</definition>
        <argsstring>(federate_t *my_fed, socket_type_t socket_type)</argsstring>
        <name>handle_physical_clock_sync_message</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>my_fed</declname>
        </param>
        <param>
          <type>socket_type_t</type>
          <declname>socket_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle clock synchronization T3 messages from federates. These will come in on the TCP channel during initialization and on the UDP channel subsequently. In both cases, this function will reply with a T4 message. If the channel is the UDP channel, then it will follow the T4 message immediately with a &quot;coded probe&quot; message, which will be used by the federate to decide whether to discard this clock synchronization round.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>my_fed</parametername>
</parameternamelist>
<parameterdescription>
<para>The sending federate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>socket_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The RTI&apos;s socket type used for the communication (TCP or UDP) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1186" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1186" bodyend="1198"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a7a50a2d7ea45420d332bc7444ce34518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_federate_resign</definition>
        <argsstring>(federate_t *my_fed)</argsstring>
        <name>handle_federate_resign</name>
        <param>
          <type><ref refid="structfederate__t" kindref="compound">federate_t</ref> *</type>
          <declname>my_fed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A function to handle messages labeled as RESIGN sent by a federate. This message is sent at the time of termination after all shutdown events are processed on the federate. This function assumes that the caller does not hold the mutex lock.</para>
<para><simplesect kind="note"><para>At this point, the RTI might have outgoing messages to the federate. This function thus first performs a shutdown on the socket which sends an EOF. It then waits for the remote socket to be closed before closing the socket itself.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>my_fed</parametername>
</parameternamelist>
<parameterdescription>
<para>The federate sending a RESIGN message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1328" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1328" bodyend="1357"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a828e8b3024c90a3b1fcefec8288ca348" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* federate_thread_TCP</definition>
        <argsstring>(void *fed)</argsstring>
        <name>federate_thread_TCP</name>
        <param>
          <type>void *</type>
          <declname>fed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Thread handling TCP communication with a federate. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fed</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the federate&apos;s struct that has the socket descriptor for the federate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1364" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1364" bodyend="1429"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1acf8907ccab075522f7b84de579d50030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void connect_to_federates</definition>
        <argsstring>(int socket_descriptor)</argsstring>
        <name>connect_to_federates</name>
        <param>
          <type>int</type>
          <declname>socket_descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wait for one incoming connection request from each federate, and upon receiving it, create a thread to communicate with that federate. Return when all federates have connected. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>socket_descriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>The socket on which to accept connections. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1436" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1436" bodyend="1643"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a846f2f3985a60f5a7eef15b4430817d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* respond_to_erroneous_connections</definition>
        <argsstring>(void *nothing)</argsstring>
        <name>respond_to_erroneous_connections</name>
        <param>
          <type>void *</type>
          <declname>nothing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Thread to respond to new connections, which could be federates of other federations who are attempting to join the wrong federation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nothing</parametername>
</parameternamelist>
<parameterdescription>
<para>Nothing needed here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1650" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1650" bodyend="1675"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a683f606ece4429251c4e82e2ebcb9a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initialize_federate</definition>
        <argsstring>(int id)</argsstring>
        <name>initialize_federate</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the federate with the specified ID. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The federate ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1680" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1680" bodyend="1700"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a58f71e85d26c946d874d07c674df6b73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initialize_clock</definition>
        <argsstring>()</argsstring>
        <name>initialize_clock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1705" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1705" bodyend="1721"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a24c617e67ab4d9fd53e0dbb37d8191e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int start_rti_server</definition>
        <argsstring>(ushort port)</argsstring>
        <name>start_rti_server</name>
        <param>
          <type><ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref></type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start the socket server for the runtime infrastructure (RTI) and return the socket descriptor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_feds</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of federates. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The port on which to listen for socket connections, or 0 to use the default port range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1730" column="5" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1730" bodyend="1746"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a005cb43e8e6c7795c8f0db27e2424475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wait_for_federates</definition>
        <argsstring>(int socket_descriptor)</argsstring>
        <name>wait_for_federates</name>
        <param>
          <type>int</type>
          <declname>socket_descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start the runtime infrastructure (RTI) interaction with the federates and wait for the federates to exit. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>socket_descriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>The socket descriptor returned by <ref refid="rti_8c_1a24c617e67ab4d9fd53e0dbb37d8191e4" kindref="member">start_rti_server()</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1753" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1753" bodyend="1832"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1aeb5079a0bdbc96962460a991aa880725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usage</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>usage</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print a usage message. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1837" column="6" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1837" bodyend="1847"/>
      </memberdef>
      <memberdef kind="function" id="rti_8c_1a8de011aeee37cd0347b5e01d7e3baed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int process_args</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>process_args</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Process the command-line arguments. If the command line arguments are not understood, then print a usage message and return 0. Otherwise, return 1. <simplesect kind="return"><para>1 if the arguments processed successfully, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" line="1854" column="5" bodyfile="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c" bodystart="1854" bodyend="1872"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Edward A. Lee (<ulink url="mailto:eal@berkeley.edu">eal@berkeley.edu</ulink>) </para>
</simplesect>
<simplesect kind="author"><para>Soroush Bateni</para>
</simplesect>
</para>
<sect1 id="util_8h_1LICENSE">
<title>LICENSE</title>
<para>Copyright (c) 2020, The University of California at Berkeley.</para>
<para>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</para>
<para><orderedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem></orderedlist>
</para>
<para>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</para>
</sect1>
<sect1 id="util_8h_1DESCRIPTION">
<title>DESCRIPTION</title>
<para>Runtime infrastructure for distributed Lingua Franca programs.</para>
<para>This implementation creates one thread per federate so as to be able to take advantage of multiple cores. It may be more efficient, however, to use select() instead to read from the multiple socket connections to each federate.</para>
<para>This implementation sends messages in little endian order because Intel, RISC V, and Arm processors are little endian. This is not what is normally considered &quot;network order&quot;, but we control both ends, and hence, for commonly used processors, this will be more efficient since it won&apos;t have to swap bytes. </para>
</sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="45"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Defines<sp/>perror(),<sp/>errno</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Provides<sp/>select()<sp/>function<sp/>to<sp/>read<sp/>from<sp/>multiple<sp/>sockets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/in.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Defines<sp/>struct<sp/>sockaddr_in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>inet_ntop<sp/>&amp;<sp/>inet_pton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Defines<sp/>read(),<sp/>write(),<sp/>and<sp/>close()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netdb.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Defines<sp/>gethostbyname().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;strings.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Defines<sp/>bzero().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/wait.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Defines<sp/>wait()<sp/>for<sp/>process<sp/>to<sp/>change<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8c" kindref="compound">util.c</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Defines<sp/>network<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="net__util_8c" kindref="compound">net_util.c</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Defines<sp/>network<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rti_8h" kindref="compound">rti.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Defines<sp/>TIMESTAMP.<sp/>Includes<sp/>&lt;pthread.h&gt;<sp/>and<sp/>&quot;reactor.h&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tag_8c" kindref="compound">tag.c</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time-related<sp/>types<sp/>and<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>mutex<sp/>lock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">pthread_mutex_t<sp/>rti_mutex<sp/>=<sp/>PTHREAD_MUTEX_INITIALIZER;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Condition<sp/>variable<sp/>used<sp/>to<sp/>signal<sp/>receipt<sp/>of<sp/>all<sp/>proposed<sp/>start<sp/>times.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">pthread_cond_t<sp/>received_start_times<sp/>=<sp/>PTHREAD_COND_INITIALIZER;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Condition<sp/>variable<sp/>used<sp/>to<sp/>signal<sp/>that<sp/>a<sp/>start<sp/>time<sp/>has<sp/>been<sp/>sent<sp/>to<sp/>a<sp/>federate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">pthread_cond_t<sp/>sent_start_time<sp/>=<sp/>PTHREAD_COND_INITIALIZER;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RTI&apos;s<sp/>decided<sp/>stop<sp/>tag<sp/>for<sp/>federates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>max_stop_tag<sp/>=<sp/>NEVER_TAG;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>federates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="structfederate__t" kindref="compound">federate_t</ref><sp/>federates[NUMBER_OF_FEDERATES];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>start<sp/>time<sp/>seen<sp/>so<sp/>far<sp/>from<sp/>the<sp/>federates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref><sp/>max_start_time<sp/>=<sp/>0LL;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>federates<sp/>that<sp/>have<sp/>proposed<sp/>start<sp/>times.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_feds_proposed_start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>federates<sp/>handling<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_feds_handling_stop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a4d05fa7465d7e249d313bc8a943f48f6" kindref="member">all_federates_exited</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="rti_8c_1afb7337572879824d012d59222ea86eeb" kindref="member">federation_id</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unidentified<sp/>Federation&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*************<sp/>TCP<sp/>server<sp/>information<sp/>*************/</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref><sp/><ref refid="rti_8c_1a2fea97e0af4aff638a2cd067e924c6f4" kindref="member">final_port_TCP</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a932b0f404c230fc102373b565ad39084" kindref="member">socket_descriptor_TCP</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*************<sp/>UDP<sp/>server<sp/>information<sp/>*************/</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref><sp/><ref refid="rti_8c_1aa409f62f662e5e53ee756ffaff4bddff" kindref="member">final_port_UDP</ref><sp/>=<sp/>USHRT_MAX;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a441e2e84bdd5cb0bc229623741d2bbed" kindref="member">socket_descriptor_UDP</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_LF_CLOCK_SYNC_ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">pthread_t<sp/>clock_thread;<sp/></highlight><highlight class="comment">//<sp/>Thread<sp/>performing<sp/>PTP<sp/>clock<sp/>sync<sp/>sessions<sp/>periodically.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_LF_CLOCK_SYNC_ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a884fcf0013b25e1f15ebefacec2b1f94" kindref="member">_lf_rti_mark_federate_requesting_stop</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>fed);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a8ca2d23d4d68874c4bf48559ed2362ec" kindref="member">create_server</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>specified_port,<sp/><ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref><sp/>port,<sp/>socket_type_t<sp/>socket_type)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timeout<sp/>time<sp/>for<sp/>the<sp/>communications<sp/>of<sp/>the<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>timeout_time<sp/>=<sp/>{.tv_sec<sp/>=<sp/><ref refid="rti_8h_1ab1edbb864391382835b9ad71408c5c53" kindref="member">TCP_TIMEOUT_TIME</ref><sp/>/<sp/>BILLION,<sp/>.tv_usec<sp/>=<sp/>(<ref refid="rti_8h_1ab1edbb864391382835b9ad71408c5c53" kindref="member">TCP_TIMEOUT_TIME</ref><sp/>%<sp/>BILLION)<sp/>/<sp/>1000};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>IPv4<sp/>socket<sp/>for<sp/>TCP<sp/>(not<sp/>UDP)<sp/>communication<sp/>over<sp/>IP<sp/>(0).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>socket_descriptor<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_type<sp/>==<sp/>TCP)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket_descriptor<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>0);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_type<sp/>==<sp/>UDP)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket_descriptor<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_DGRAM,<sp/>0);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>appropriate<sp/>timeout<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout_time<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval){.tv_sec<sp/>=<sp/><ref refid="rti_8h_1aac9f4a449d302b4f39e69a14b3a4c8d5" kindref="member">UDP_TIMEOUT_TIME</ref><sp/>/<sp/>BILLION,<sp/>.tv_usec<sp/>=<sp/>(<ref refid="rti_8h_1aac9f4a449d302b4f39e69a14b3a4c8d5" kindref="member">UDP_TIMEOUT_TIME</ref><sp/>%<sp/>BILLION)<sp/>/<sp/>1000};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_descriptor<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a7389ef15e70a377a52086e6d6b956d70" kindref="member">error_print_and_exit</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>RTI<sp/>socket.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>option<sp/>for<sp/>this<sp/>socket<sp/>to<sp/>reuse<sp/>the<sp/>same<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>true_variable<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>setsockopt()<sp/>requires<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>value<sp/>assigned<sp/>to<sp/>an<sp/>option</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setsockopt(socket_descriptor,<sp/>SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/>&amp;true_variable,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>set<sp/>SO_REUSEADDR<sp/>option<sp/>on<sp/>the<sp/>socket:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>timeout<sp/>on<sp/>the<sp/>socket<sp/>so<sp/>that<sp/>read<sp/>and<sp/>write<sp/>operations<sp/>don&apos;t<sp/>block<sp/>for<sp/>too<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setsockopt(socket_descriptor,<sp/>SOL_SOCKET,<sp/>SO_RCVTIMEO,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;timeout_time,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(timeout_time))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>set<sp/>SO_RCVTIMEO<sp/>option<sp/>on<sp/>the<sp/>socket:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setsockopt(socket_descriptor,<sp/>SOL_SOCKET,<sp/>SO_SNDTIMEO,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;timeout_time,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(timeout_time))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>set<sp/>SO_SNDTIMEO<sp/>option<sp/>on<sp/>the<sp/>socket:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>following<sp/>used<sp/>to<sp/>permit<sp/>reuse<sp/>of<sp/>a<sp/>port<sp/>that<sp/>an<sp/>RTI<sp/>has<sp/>previously</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>used<sp/>that<sp/>has<sp/>not<sp/>been<sp/>released.<sp/>We<sp/>no<sp/>longer<sp/>do<sp/>this,<sp/>but<sp/>instead</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>increment<sp/>the<sp/>port<sp/>number<sp/>until<sp/>an<sp/>available<sp/>port<sp/>is<sp/>found.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"></highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>SO_REUSEPORT<sp/>(since<sp/>Linux<sp/>3.9)</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Permits<sp/>multiple<sp/>AF_INET<sp/>or<sp/>AF_INET6<sp/>sockets<sp/>to<sp/>be<sp/>bound<sp/>to<sp/>an</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>identical<sp/>socket<sp/>address.<sp/><sp/>This<sp/>option<sp/>must<sp/>be<sp/>set<sp/>on<sp/>each</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket<sp/>(including<sp/>the<sp/>first<sp/>socket)<sp/>prior<sp/>to<sp/>calling<sp/>bind(2)</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>the<sp/>socket.<sp/><sp/>To<sp/>prevent<sp/>port<sp/>hijacking,<sp/>all<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>processes<sp/>binding<sp/>to<sp/>the<sp/>same<sp/>address<sp/>must<sp/>have<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>effective<sp/>UID.<sp/><sp/>This<sp/>option<sp/>can<sp/>be<sp/>employed<sp/>with<sp/>both<sp/>TCP<sp/>and</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>UDP<sp/>sockets.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"></highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>reuse<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(setsockopt(socket_descriptor,<sp/>SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>char*)&amp;reuse,<sp/>sizeof(reuse))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(&quot;setsockopt(SO_REUSEADDR)<sp/>failed&quot;);</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="comment"></highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/>#ifdef<sp/>SO_REUSEPORT</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(setsockopt(socket_descriptor,<sp/>SOL_SOCKET,<sp/>SO_REUSEPORT,<sp/></highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>char*)&amp;reuse,<sp/>sizeof(reuse))<sp/>&lt;<sp/>0)<sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(&quot;setsockopt(SO_REUSEPORT)<sp/>failed&quot;);</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Server<sp/>file<sp/>descriptor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>server_fd;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>out<sp/>the<sp/>server<sp/>address<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>bzero((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;server_fd,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(server_fd));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>server_fd.sin_family<sp/>=<sp/>AF_INET;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IPv4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>server_fd.sin_addr.s_addr<sp/>=<sp/>INADDR_ANY;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>interfaces,<sp/>0.0.0.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>port<sp/>number<sp/>from<sp/>host<sp/>byte<sp/>order<sp/>to<sp/>network<sp/>byte<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>server_fd.sin_port<sp/>=<sp/>htons(port);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>bind(</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket_descriptor,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;server_fd,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(server_fd));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>binding<sp/>fails<sp/>with<sp/>this<sp/>port<sp/>and<sp/>no<sp/>particular<sp/>port<sp/>was<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>LF<sp/>program,<sp/>then<sp/>try<sp/>the<sp/>next<sp/>few<sp/>ports<sp/>in<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>specified_port<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>port<sp/>&gt;=<sp/><ref refid="rti_8h_1a3935567021a890f8b97f3d733ca5cfa1" kindref="member">STARTING_PORT</ref></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>port<sp/>&lt;=<sp/><ref refid="rti_8h_1a3935567021a890f8b97f3d733ca5cfa1" kindref="member">STARTING_PORT</ref><sp/>+<sp/><ref refid="rti_8h_1aff81692fc67e6f7838d9d1cff402d7f6" kindref="member">PORT_RANGE_LIMIT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1ab831b6ca5cfb47d7d4b3f15ef8e0f053" kindref="member">info_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>get<sp/>port<sp/>%d.<sp/>Trying<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>port,<sp/>port<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port++;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_fd.sin_port<sp/>=<sp/>htons(port);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>bind(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket_descriptor,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;server_fd,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(server_fd));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(specified_port<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a7389ef15e70a377a52086e6d6b956d70" kindref="member">error_print_and_exit</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>bind<sp/>the<sp/>RTI<sp/>socket.<sp/>Cannot<sp/>find<sp/>a<sp/>usable<sp/>port.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Consider<sp/>increasing<sp/>PORT_RANGE_LIMIT<sp/>in<sp/>rti.h.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a7389ef15e70a377a52086e6d6b956d70" kindref="member">error_print_and_exit</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>bind<sp/>the<sp/>RTI<sp/>socket.<sp/>Specified<sp/>port<sp/>is<sp/>not<sp/>available.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Consider<sp/>leaving<sp/>the<sp/>port<sp/>unspecified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TCP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_type<sp/>==<sp/>UDP)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UDP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8c_1ab831b6ca5cfb47d7d4b3f15ef8e0f053" kindref="member">info_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>using<sp/>%s<sp/>port<sp/>%d<sp/>for<sp/>federation<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>type,<sp/>port,<sp/><ref refid="rti_8c_1afb7337572879824d012d59222ea86eeb" kindref="member">federation_id</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_type<sp/>==<sp/>TCP)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a2fea97e0af4aff638a2cd067e924c6f4" kindref="member">final_port_TCP</ref><sp/>=<sp/>port;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>listening<sp/>for<sp/>socket<sp/>connections.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>second<sp/>argument<sp/>is<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>queued<sp/>socket<sp/>requests,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>according<sp/>to<sp/>the<sp/>Mac<sp/>man<sp/>page<sp/>is<sp/>limited<sp/>to<sp/>128.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listen(socket_descriptor,<sp/>128);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_type<sp/>==<sp/>UDP)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1aa409f62f662e5e53ee756ffaff4bddff" kindref="member">final_port_UDP</ref><sp/>=<sp/>port;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>listen<sp/>on<sp/>the<sp/>UDP<sp/>socket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>socket_descriptor;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a6696c6969eb341c48269c2da6cec0caf" kindref="member">handle_port_absent_message</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>sending_federate,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>message_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1a818d416d39f7c82f1fbeb5c5d3149f0d" kindref="member">microstep_t</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a9d26e19c03e782593ba0f1791b7f35b5" kindref="member">read_from_socket_errexit</ref>(sending_federate-&gt;socket,<sp/>message_size,<sp/>&amp;(buffer[1]),<sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>RTI<sp/>failed<sp/>ot<sp/>read<sp/>port<sp/>absent<sp/>message<sp/>from<sp/>federate<sp/>%u.&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sending_federate-&gt;id);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>acquire<sp/>the<sp/>mutex<sp/>lock<sp/>to<sp/>ensure<sp/>that<sp/>the<sp/>thread<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>messages<sp/>coming<sp/>from<sp/>the<sp/>socket<sp/>connected<sp/>to<sp/>the<sp/>destination<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>issue<sp/>a<sp/>TAG<sp/>before<sp/>this<sp/>message<sp/>has<sp/>been<sp/>forwarded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>port_id<sp/>=<sp/><ref refid="net__util_8c_1ab52445dc6792e1d40424c4e0edc18704" kindref="member">extract_ushort</ref>(&amp;(buffer[1]));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>federate_id<sp/>=<sp/><ref refid="net__util_8c_1ab52445dc6792e1d40424c4e0edc18704" kindref="member">extract_ushort</ref>(&amp;(buffer[1<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)]));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>destination<sp/>federate<sp/>is<sp/>no<sp/>longer<sp/>connected,<sp/>issue<sp/>a<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(federates[federate_id].state<sp/>==<sp/>NOT_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a31c6c0670e0e0d97586def29f10bf7d4" kindref="member">warning_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI:<sp/>Destination<sp/>federate<sp/>%d<sp/>is<sp/>no<sp/>longer<sp/>connected.<sp/>Dropping<sp/>message.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federate_id);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>forwarding<sp/>port<sp/>absent<sp/>message<sp/>for<sp/>port<sp/>%u<sp/>to<sp/>federate<sp/>%u.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_id,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federate_id);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>destination<sp/>federate&apos;s<sp/>thread<sp/>has<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sent<sp/>the<sp/>starting<sp/>TIMESTAMP<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(federates[federate_id].state<sp/>==<sp/>PENDING)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>wait<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;sent_start_time,<sp/>&amp;rti_mutex);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>the<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destination_socket<sp/>=<sp/>federates[federate_id].socket;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0e3b7299eccba74fcd7a27f37642dc7e" kindref="member">write_to_socket_errexit</ref>(destination_socket,<sp/>message_size<sp/>+<sp/>1,<sp/>buffer,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>forward<sp/>message<sp/>to<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>federate_id);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1afc6a599f3f5b9cf66a147b0f9ca657c8" kindref="member">handle_timed_message</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>sending_federate,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>header_size<sp/>=<sp/>1<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1a818d416d39f7c82f1fbeb5c5d3149f0d" kindref="member">microstep_t</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>header,<sp/>minus<sp/>the<sp/>first<sp/>byte<sp/>which<sp/>is<sp/>already<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a9d26e19c03e782593ba0f1791b7f35b5" kindref="member">read_from_socket_errexit</ref>(sending_federate-&gt;socket,<sp/>header_size<sp/>-<sp/>1,<sp/>&amp;(buffer[1]),<sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>read<sp/>the<sp/>timed<sp/>message<sp/>header<sp/>from<sp/>remote<sp/>federate.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>header<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>port_id;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>federate_id;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>intended_tag;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>information<sp/>from<sp/>the<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a3e9fc45154c83606a54f358e4978b489" kindref="member">extract_timed_header</ref>(&amp;(buffer[1]),<sp/>&amp;port_id,<sp/>&amp;federate_id,<sp/>&amp;length,<sp/>&amp;intended_tag);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_bytes_to_read<sp/>=<sp/>length<sp/>+<sp/>header_size;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_to_read<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>a<sp/>buffer<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_to_read<sp/>+<sp/>header_size<sp/>&gt;<sp/><ref refid="rti_8h_1acc95612e1d2dbbdf34afe76d50e75223" kindref="member">FED_COM_BUFFER_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_to_read<sp/>=<sp/><ref refid="rti_8h_1acc95612e1d2dbbdf34afe76d50e75223" kindref="member">FED_COM_BUFFER_SIZE</ref><sp/>-<sp/>header_size;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>message<sp/>from<sp/>federate<sp/>%d<sp/>for<sp/>federate<sp/>%u<sp/>port<sp/>%u.<sp/>Forwarding.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sending_federate-&gt;id,<sp/>federate_id,<sp/>port_id);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a9d26e19c03e782593ba0f1791b7f35b5" kindref="member">read_from_socket_errexit</ref>(sending_federate-&gt;socket,<sp/>bytes_to_read,<sp/>&amp;(buffer[header_size]),</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>read<sp/>timed<sp/>message<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>federate_id);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_read<sp/>=<sp/>bytes_to_read<sp/>+<sp/>header_size;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Following<sp/>only<sp/>works<sp/>for<sp/>string<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DEBUG_PRINT(&quot;Message<sp/>received<sp/>by<sp/>RTI:<sp/>%s.&quot;,<sp/>buffer<sp/>+<sp/>header_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>acquire<sp/>the<sp/>mutex<sp/>lock<sp/>to<sp/>ensure<sp/>that<sp/>the<sp/>thread<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>messages<sp/>coming<sp/>from<sp/>the<sp/>socket<sp/>connected<sp/>to<sp/>the<sp/>destination<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>issue<sp/>a<sp/>TAG<sp/>before<sp/>this<sp/>message<sp/>has<sp/>been<sp/>forwarded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>destination<sp/>federate<sp/>is<sp/>no<sp/>longer<sp/>connected,<sp/>issue<sp/>a<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(federates[federate_id].state<sp/>==<sp/>NOT_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a31c6c0670e0e0d97586def29f10bf7d4" kindref="member">warning_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI:<sp/>Destination<sp/>federate<sp/>%d<sp/>is<sp/>no<sp/>longer<sp/>connected.<sp/>Dropping<sp/>message.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federate_id);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>destination<sp/>federate<sp/>has<sp/>previously<sp/>sent<sp/>a<sp/>NET<sp/>that<sp/>is<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>the<sp/>indended<sp/>tag<sp/>of<sp/>this<sp/>message,<sp/>then<sp/>reset<sp/>that<sp/>NET<sp/>to<sp/>be<sp/>equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>indended<sp/>tag<sp/>of<sp/>this<sp/>message.<sp/><sp/>This<sp/>is<sp/>needed<sp/>because<sp/>the<sp/>NET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>a<sp/>promise<sp/>that<sp/>is<sp/>valid<sp/>only<sp/>in<sp/>the<sp/>absence<sp/>of<sp/>network<sp/>inputs,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>now<sp/>there<sp/>is<sp/>a<sp/>network<sp/>input.<sp/>Hence,<sp/>the<sp/>promise<sp/>needs<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(federates[federate_id].next_event,<sp/>intended_tag)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federates[federate_id].next_event<sp/>=<sp/>intended_tag;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>the<sp/>message<sp/>or<sp/>message<sp/>chunk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destination_socket<sp/>=<sp/>federates[federate_id].socket;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>forwarding<sp/>message<sp/>to<sp/>port<sp/>%d<sp/>of<sp/>federate<sp/>%d<sp/>of<sp/>length<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>port_id,<sp/>federate_id,<sp/>length);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>destination<sp/>federate&apos;s<sp/>thread<sp/>has<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sent<sp/>the<sp/>starting<sp/>TIMESTAMP<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(federates[federate_id].state<sp/>==<sp/>PENDING)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>wait<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;sent_start_time,<sp/>&amp;rti_mutex);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0e3b7299eccba74fcd7a27f37642dc7e" kindref="member">write_to_socket_errexit</ref>(destination_socket,<sp/>bytes_read,<sp/>buffer,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>forward<sp/>message<sp/>to<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>federate_id);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>message<sp/>length<sp/>may<sp/>be<sp/>longer<sp/>than<sp/>the<sp/>buffer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>which<sp/>case<sp/>we<sp/>have<sp/>to<sp/>handle<sp/>it<sp/>in<sp/>chunks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_bytes_read<sp/>=<sp/>bytes_read;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(total_bytes_read<sp/>&lt;<sp/>total_bytes_to_read)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Forwarding<sp/>message<sp/>in<sp/>chunks.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_to_read<sp/>=<sp/>total_bytes_to_read<sp/>-<sp/>total_bytes_read;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_to_read<sp/>&gt;<sp/><ref refid="rti_8h_1acc95612e1d2dbbdf34afe76d50e75223" kindref="member">FED_COM_BUFFER_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_to_read<sp/>=<sp/><ref refid="rti_8h_1acc95612e1d2dbbdf34afe76d50e75223" kindref="member">FED_COM_BUFFER_SIZE</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a9d26e19c03e782593ba0f1791b7f35b5" kindref="member">read_from_socket_errexit</ref>(sending_federate-&gt;socket,<sp/>bytes_to_read,<sp/>buffer,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>read<sp/>message<sp/>chunks.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_bytes_read<sp/>+=<sp/>bytes_to_read;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0e3b7299eccba74fcd7a27f37642dc7e" kindref="member">write_to_socket_errexit</ref>(destination_socket,<sp/>bytes_to_read,<sp/>buffer,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>send<sp/>message<sp/>chunks.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a2c94ce50b24ed5cc0bfce3d548d8e59f" kindref="member">send_tag_advance_grant</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>fed,<sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fed-&gt;state<sp/>==<sp/>NOT_CONNECTED</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(tag,<sp/>fed-&gt;last_granted)<sp/>&lt;=<sp/>0</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(tag,<sp/>fed-&gt;last_provisionally_granted)<sp/>&lt;<sp/>0</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>message_length<sp/>=<sp/>1<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1a818d416d39f7c82f1fbeb5c5d3149f0d" kindref="member">microstep_t</ref>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[message_length];</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[0]<sp/>=<sp/><ref refid="rti_8h_1a6e44583f2f5668165e01b0d15a3a780f" kindref="member">TIME_ADVANCE_GRANT</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0b8cbad5d6dc462c87eb48c6a5519c33" kindref="member">encode_ll</ref>(tag.time,<sp/>&amp;(buffer[1]));</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1af4312040e137fb9d644f96edaa74075d" kindref="member">encode_int</ref>(tag.microstep,<sp/>&amp;(buffer[1<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)]));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>called<sp/>in<sp/>send_tag_advance_if_appropriate(),<sp/>which<sp/>is<sp/>a<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function.<sp/>During<sp/>this<sp/>call,<sp/>the<sp/>socket<sp/>might<sp/>close,<sp/>causing<sp/>the<sp/>following<sp/>write_to_socket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>fail.<sp/>Consider<sp/>a<sp/>failure<sp/>here<sp/>a<sp/>soft<sp/>failure<sp/>and<sp/>update<sp/>the<sp/>federate&apos;s<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_written<sp/>=<sp/><ref refid="net__util_8c_1ae9bab7965862259f354a419e4140b564" kindref="member">write_to_socket</ref>(fed-&gt;socket,<sp/>message_length,<sp/>buffer);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>message_length)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>send<sp/>time<sp/>advance<sp/>grant<sp/>to<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed-&gt;id);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;state<sp/>=<sp/>NOT_CONNECTED;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>We<sp/>need<sp/>better<sp/>error<sp/>handling,<sp/>but<sp/>don&apos;t<sp/>stop<sp/>other<sp/>execution<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_lf_rti_mark_federate_requesting_stop(fed);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;last_granted<sp/>=<sp/>tag;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>sent<sp/>to<sp/>federate<sp/>%d<sp/>the<sp/>Time<sp/>Advance<sp/>Grant<sp/>(TAG)<sp/>(%lld,<sp/>%u).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;id,<sp/>tag.time<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,<sp/>tag.microstep);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/><ref refid="rti_8c_1aa067d8ff2e12b42f8c1f011758231be1" kindref="member">transitive_next_event</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>fed,<sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>candidate,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visited[])<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visited[fed-&gt;id]<sp/>||<sp/>fed-&gt;state<sp/>==<sp/>NOT_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Federate<sp/>has<sp/>stopped<sp/>executing<sp/>or<sp/>we<sp/>have<sp/>visited<sp/>it<sp/>before.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>point<sp/>in<sp/>checking<sp/>upstream<sp/>federates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>candidate;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>visited[fed-&gt;id]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>NET<sp/>already<sp/>takes<sp/>into<sp/>account<sp/>any<sp/>TAN<sp/>messages<sp/>received.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>result<sp/>=<sp/>fed-&gt;next_event;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>candidate<sp/>is<sp/>less<sp/>than<sp/>this<sp/>federate&apos;s<sp/>next_event,<sp/>use<sp/>the<sp/>candidate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(candidate,<sp/>result)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>candidate;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>result<sp/>cannot<sp/>be<sp/>earlier<sp/>than<sp/>the<sp/>start<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.time<sp/>&lt;<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Earliest<sp/>next<sp/>event<sp/>cannot<sp/>be<sp/>before<sp/>the<sp/>start<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(<ref refid="structtag__t" kindref="compound">tag_t</ref>){.time<sp/>=<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,<sp/>.microstep<sp/>=<sp/>0u};</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>upstream<sp/>federates<sp/>to<sp/>see<sp/>whether<sp/>any<sp/>of<sp/>them<sp/>might<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>event<sp/>that<sp/>would<sp/>result<sp/>in<sp/>an<sp/>earlier<sp/>next<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fed-&gt;num_upstream;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>upstream_result<sp/>=<sp/><ref refid="rti_8c_1aa067d8ff2e12b42f8c1f011758231be1" kindref="member">transitive_next_event</ref>(</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;federates[fed-&gt;upstream[i]],<sp/>result,<sp/>visited);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>&quot;after&quot;<sp/>delay<sp/>of<sp/>the<sp/>connection<sp/>to<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upstream_result<sp/>=<sp/><ref refid="tag_8c_1a285bf3926110e2e1ee38febe34f69222" kindref="member">delay_tag</ref>(upstream_result,<sp/>fed-&gt;upstream_delay[i]);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>adjusted<sp/>event<sp/>time<sp/>is<sp/>less<sp/>than<sp/>the<sp/>result<sp/>so<sp/>far,<sp/>update<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(upstream_result,<sp/>result)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>upstream_result;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(result,<sp/>fed-&gt;completed)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fed-&gt;completed;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1ab36a04086b8af885621e5f808efecd23" kindref="member">send_provisional_tag_advance_grant</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>fed,<sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fed-&gt;state<sp/>==<sp/>NOT_CONNECTED</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(tag,<sp/>fed-&gt;last_granted)<sp/>&lt;=<sp/>0</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(tag,<sp/>fed-&gt;last_provisionally_granted)<sp/>&lt;=<sp/>0</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(tag.time<sp/>==<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref><sp/>&amp;&amp;<sp/>tag.microstep<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>PTAG<sp/>at<sp/>(0,0)<sp/>is<sp/>implicit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>message_length<sp/>=<sp/>1<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1a818d416d39f7c82f1fbeb5c5d3149f0d" kindref="member">microstep_t</ref>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[message_length];</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[0]<sp/>=<sp/><ref refid="rti_8h_1a8ec00307b6556a571f6420bbcb0a5d66" kindref="member">PROVISIONAL_TIME_ADVANCE_GRANT</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0b8cbad5d6dc462c87eb48c6a5519c33" kindref="member">encode_ll</ref>(tag.time,<sp/>&amp;(buffer[1]));</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1af4312040e137fb9d644f96edaa74075d" kindref="member">encode_int</ref>(tag.microstep,<sp/>&amp;(buffer[1<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)]));</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>called<sp/>in<sp/>send_tag_advance_if_appropriate(),<sp/>which<sp/>is<sp/>a<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function.<sp/>During<sp/>this<sp/>call,<sp/>the<sp/>socket<sp/>might<sp/>close,<sp/>causing<sp/>the<sp/>following<sp/>write_to_socket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>fail.<sp/>Consider<sp/>a<sp/>failure<sp/>here<sp/>a<sp/>soft<sp/>failure<sp/>and<sp/>update<sp/>the<sp/>federate&apos;s<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_written<sp/>=<sp/><ref refid="net__util_8c_1ae9bab7965862259f354a419e4140b564" kindref="member">write_to_socket</ref>(fed-&gt;socket,<sp/>message_length,<sp/>buffer);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>message_length)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>send<sp/>time<sp/>advance<sp/>grant<sp/>to<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed-&gt;id);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;state<sp/>=<sp/>NOT_CONNECTED;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>We<sp/>need<sp/>better<sp/>error<sp/>handling,<sp/>but<sp/>don&apos;t<sp/>stop<sp/>other<sp/>execution<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_lf_rti_mark_federate_requesting_stop(fed);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;last_provisionally_granted<sp/>=<sp/>tag;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>sent<sp/>to<sp/>federate<sp/>%d<sp/>the<sp/>Provisional<sp/>Tag<sp/>Advance<sp/>Grant<sp/>(PTAG)<sp/>(%lld,<sp/>%u).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;id,<sp/>tag.time<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,<sp/>tag.microstep);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>PTAG<sp/>to<sp/>all<sp/>upstream<sp/>federates,<sp/>if<sp/>they<sp/>have<sp/>not<sp/>had</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>later<sp/>or<sp/>equal<sp/>PTAG<sp/>or<sp/>TAG<sp/>sent<sp/>previously<sp/>and<sp/>if<sp/>their<sp/>transitive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NET<sp/>is<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>the<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>This<sp/>could<sp/>later<sp/>be<sp/>replaced<sp/>with<sp/>a<sp/>TNET<sp/>mechanism<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>an<sp/>available<sp/>encoding<sp/>of<sp/>causality<sp/>interfaces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>That<sp/>might<sp/>be<sp/>more<sp/>efficient.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>fed-&gt;num_upstream;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>upstream<sp/>=<sp/>&amp;federates[fed-&gt;upstream[j]];</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>this<sp/>federate<sp/>if<sp/>it<sp/>has<sp/>resigned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upstream-&gt;state<sp/>==<sp/>NOT_CONNECTED)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>handle<sp/>cycles,<sp/>need<sp/>to<sp/>create<sp/>a<sp/>boolean<sp/>array<sp/>to<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>of<sp/>which<sp/>upstream<sp/>federates<sp/>have<sp/>been<sp/>visited.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visited[NUMBER_OF_FEDERATES]<sp/>=<sp/>{<sp/>};<sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>initializer<sp/>initializes<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>(transitive)<sp/>next<sp/>event<sp/>tag<sp/>upstream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>upstream_next_event<sp/>=<sp/><ref refid="rti_8c_1aa067d8ff2e12b42f8c1f011758231be1" kindref="member">transitive_next_event</ref>(</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upstream,<sp/>upstream-&gt;next_event,<sp/>visited);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>these<sp/>tags<sp/>are<sp/>equal,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>TAG<sp/>or<sp/>PTAG<sp/>should<sp/>have<sp/>already<sp/>been<sp/>granted,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>which<sp/>case,<sp/>another<sp/>will<sp/>not<sp/>be<sp/>sent.<sp/>But<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>not<sp/>have<sp/>been<sp/>already<sp/>granted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(upstream_next_event,<sp/>tag)<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1ab36a04086b8af885621e5f808efecd23" kindref="member">send_provisional_tag_advance_grant</ref>(upstream,<sp/>tag);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a9322b3f6a014743c6447dccabe485db3" kindref="member">send_tag_advance_if_appropriate</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>fed)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>earliest<sp/>LTC<sp/>of<sp/>upstream<sp/>federates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>min_upstream_completed<sp/>=<sp/>FOREVER_TAG;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>fed-&gt;num_upstream;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>upstream<sp/>=<sp/>&amp;federates[fed-&gt;upstream[j]];</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>this<sp/>federate<sp/>if<sp/>it<sp/>has<sp/>resigned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upstream-&gt;state<sp/>==<sp/>NOT_CONNECTED)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>candidate<sp/>=<sp/><ref refid="tag_8c_1a285bf3926110e2e1ee38febe34f69222" kindref="member">delay_tag</ref>(upstream-&gt;completed,<sp/>fed-&gt;upstream_delay[j]);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(candidate,<sp/>min_upstream_completed)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_upstream_completed<sp/>=<sp/>candidate;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Minimum<sp/>upstream<sp/>LTC<sp/>for<sp/>fed<sp/>%d<sp/>is<sp/>(%lld,<sp/>%u)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(adjusted<sp/>by<sp/>after<sp/>delay).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;id,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_upstream_completed.time<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,<sp/>min_upstream_completed.microstep);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(min_upstream_completed,<sp/>fed-&gt;last_granted)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a2c94ce50b24ed5cc0bfce3d548d8e59f" kindref="member">send_tag_advance_grant</ref>(fed,<sp/>min_upstream_completed);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>make<sp/>progress<sp/>based<sp/>only<sp/>on<sp/>upstream<sp/>LTCs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>all<sp/>(transitive)<sp/>upstream<sp/>federates<sp/>of<sp/>the<sp/>federate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>earliest<sp/>event<sp/>tags<sp/>such<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>federate<sp/>can<sp/>now<sp/>advance<sp/>its<sp/>tag,<sp/>then<sp/>send<sp/>it<sp/>a<sp/>TAG<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>earliest<sp/>event<sp/>time<sp/>of<sp/>each<sp/>such<sp/>upstream<sp/>federate,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjusted<sp/>by<sp/>delays<sp/>on<sp/>the<sp/>connections.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>handle<sp/>cycles,<sp/>need<sp/>to<sp/>create<sp/>a<sp/>boolean<sp/>array<sp/>to<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>of<sp/>which<sp/>upstream<sp/>federates<sp/>have<sp/>been<sp/>visited.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visited[NUMBER_OF_FEDERATES]<sp/>=<sp/>{<sp/>};<sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>initializer<sp/>initializes<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>tag<sp/>of<sp/>the<sp/>earliest<sp/>possible<sp/>incoming<sp/>message<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>upstream<sp/>federates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>t_d<sp/>=<sp/>FOREVER_TAG;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;NOTE:<sp/>FOREVER<sp/>is<sp/>displayed<sp/>as<sp/>(%lld,<sp/>%u)<sp/>and<sp/>NEVER<sp/>as<sp/>(%lld,<sp/>%u)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FOREVER_TAG.time<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,<sp/>FOREVER_TAG.microstep,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEVER<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,<sp/>0u);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>fed-&gt;num_upstream;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>upstream<sp/>=<sp/>&amp;federates[fed-&gt;upstream[j]];</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>this<sp/>federate<sp/>if<sp/>it<sp/>has<sp/>resigned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upstream-&gt;state<sp/>==<sp/>NOT_CONNECTED)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>(transitive)<sp/>next<sp/>event<sp/>tag<sp/>upstream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>upstream_next_event<sp/>=<sp/><ref refid="rti_8c_1aa067d8ff2e12b42f8c1f011758231be1" kindref="member">transitive_next_event</ref>(</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upstream,<sp/>upstream-&gt;next_event,<sp/>visited);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Earliest<sp/>next<sp/>event<sp/>upstream<sp/>of<sp/>fed<sp/>%d<sp/>at<sp/>fed<sp/>%d<sp/>has<sp/>tag<sp/>(%lld,<sp/>%u).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;id,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upstream-&gt;id,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upstream_next_event.time<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,<sp/>upstream_next_event.microstep);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>by<sp/>the<sp/>&quot;after&quot;<sp/>delay.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>&quot;no<sp/>delay&quot;<sp/>is<sp/>encoded<sp/>as<sp/>NEVER,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whereas<sp/>one<sp/>microstep<sp/>delay<sp/>is<sp/>encoded<sp/>as<sp/>0LL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>candidate<sp/>=<sp/><ref refid="tag_8c_1a285bf3926110e2e1ee38febe34f69222" kindref="member">delay_tag</ref>(upstream_next_event,<sp/>fed-&gt;upstream_delay[j]);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(candidate,<sp/>t_d)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_d<sp/>=<sp/>candidate;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Earliest<sp/>next<sp/>event<sp/>upstream<sp/>has<sp/>tag<sp/>(%lld,<sp/>%u).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_d.time<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,<sp/>t_d.microstep);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(t_d,<sp/>FOREVER_TAG)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upstream<sp/>federates<sp/>are<sp/>all<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Upstream<sp/>federates<sp/>are<sp/>all<sp/>done.<sp/>Granting<sp/>tag<sp/>advance.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a2c94ce50b24ed5cc0bfce3d548d8e59f" kindref="member">send_tag_advance_grant</ref>(fed,<sp/>FOREVER_TAG);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t_d.time<sp/>==<sp/>FOREVER)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;All<sp/>upstream<sp/>federates<sp/>are<sp/>finished.<sp/>Sending<sp/>TAG(FOREVER).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a2c94ce50b24ed5cc0bfce3d548d8e59f" kindref="member">send_tag_advance_grant</ref>(fed,<sp/>FOREVER_TAG);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(t_d,<sp/>fed-&gt;next_event)<sp/>&gt;=<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>federate<sp/>has<sp/>something<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(t_d,<sp/>fed-&gt;last_provisionally_granted)<sp/>&gt;<sp/>0<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>grant<sp/>is<sp/>not<sp/>redundant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(t_d,<sp/>fed-&gt;last_granted)<sp/>&gt;<sp/>0<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>grant<sp/>is<sp/>not<sp/>redundant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Earliest<sp/>upstream<sp/>message<sp/>time<sp/>for<sp/>fed<sp/>%d<sp/>is<sp/>(%lld,<sp/>%u)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(adjusted<sp/>by<sp/>after<sp/>delay).<sp/>Granting<sp/>provisional<sp/>tag<sp/>advance.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;id,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_d.time<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,<sp/>t_d.microstep);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1ab36a04086b8af885621e5f808efecd23" kindref="member">send_provisional_tag_advance_grant</ref>(fed,<sp/>t_d);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a6bba97c8acc2b80259f8b94b01e1697d" kindref="member">handle_logical_tag_complete</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>fed)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1a818d416d39f7c82f1fbeb5c5d3149f0d" kindref="member">microstep_t</ref>)];</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a9d26e19c03e782593ba0f1791b7f35b5" kindref="member">read_from_socket_errexit</ref>(fed-&gt;socket,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1a818d416d39f7c82f1fbeb5c5d3149f0d" kindref="member">microstep_t</ref>),<sp/>buffer,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>read<sp/>the<sp/>content<sp/>of<sp/>the<sp/>logical<sp/>tag<sp/>complete<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed-&gt;id);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Consolidate<sp/>this<sp/>message<sp/>with<sp/>NET<sp/>to<sp/>get<sp/>NMR<sp/>(Next<sp/>Message<sp/>Request).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Careful<sp/>with<sp/>handling<sp/>startup<sp/>and<sp/>shutdown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>fed-&gt;completed.time<sp/>=<sp/><ref refid="net__util_8c_1a3c03766b3fd76c7ad5901581a766caa8" kindref="member">extract_ll</ref>(buffer);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>fed-&gt;completed.microstep<sp/>=<sp/><ref refid="net__util_8c_1a2c3e1559ae8f31e111cedc00211edded" kindref="member">extract_int</ref>(&amp;(buffer[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)]));</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>from<sp/>federate<sp/>%d<sp/>the<sp/>Logical<sp/>Tag<sp/>Complete<sp/>(LTC)<sp/>(%lld,<sp/>%u).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;id,<sp/>fed-&gt;completed.time<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,<sp/>fed-&gt;completed.microstep);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>downstream<sp/>federates<sp/>to<sp/>see<sp/>whether<sp/>they<sp/>should<sp/>now<sp/>be<sp/>granted<sp/>a<sp/>TAG.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fed-&gt;num_downstream;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>downstream<sp/>=<sp/>&amp;federates[fed-&gt;downstream[i]];</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a9322b3f6a014743c6447dccabe485db3" kindref="member">send_tag_advance_if_appropriate</ref>(downstream);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1ad3d3a13c504c13abe514b40d46c19cc5" kindref="member">transitive_send_TAG_if_appropriate</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>fed,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visited[])<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>visited[fed-&gt;id]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fed-&gt;num_downstream;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>downstream<sp/>=<sp/>&amp;federates[fed-&gt;downstream[i]];</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visited[downstream-&gt;id])<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a9322b3f6a014743c6447dccabe485db3" kindref="member">send_tag_advance_if_appropriate</ref>(downstream);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1ad3d3a13c504c13abe514b40d46c19cc5" kindref="member">transitive_send_TAG_if_appropriate</ref>(downstream,<sp/>visited);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a77dee2c405d4fe62278a1cf972272bd2" kindref="member">handle_next_event_tag</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>fed)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1a818d416d39f7c82f1fbeb5c5d3149f0d" kindref="member">microstep_t</ref>)];</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a9d26e19c03e782593ba0f1791b7f35b5" kindref="member">read_from_socket_errexit</ref>(fed-&gt;socket,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1a818d416d39f7c82f1fbeb5c5d3149f0d" kindref="member">microstep_t</ref>),<sp/>buffer,<sp/></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>read<sp/>the<sp/>content<sp/>of<sp/>the<sp/>next<sp/>event<sp/>tag<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed-&gt;id);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Acquire<sp/>a<sp/>mutex<sp/>lock<sp/>to<sp/>ensure<sp/>that<sp/>this<sp/>state<sp/>does<sp/>change<sp/>while<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>message<sp/>is<sp/>in<sp/>transport<sp/>or<sp/>being<sp/>used<sp/>to<sp/>determine<sp/>a<sp/>TAG.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>fed-&gt;next_event.time<sp/>=<sp/><ref refid="net__util_8c_1a3c03766b3fd76c7ad5901581a766caa8" kindref="member">extract_ll</ref>(buffer);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>fed-&gt;next_event.microstep<sp/>=<sp/><ref refid="net__util_8c_1a2c3e1559ae8f31e111cedc00211edded" kindref="member">extract_int</ref>(&amp;(buffer[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)]));</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>from<sp/>federate<sp/>%d<sp/>the<sp/>Next<sp/>Event<sp/>Tag<sp/>(NET)<sp/>(%lld,<sp/>%u).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;id,<sp/>fed-&gt;next_event.time<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;next_event.microstep);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>to<sp/>see<sp/>whether<sp/>we<sp/>can<sp/>reply<sp/>now<sp/>with<sp/>a<sp/>time<sp/>advance<sp/>grant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>federate<sp/>has<sp/>no<sp/>upstream<sp/>federates,<sp/>then<sp/>it<sp/>does<sp/>not<sp/>wait<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nor<sp/>expect<sp/>a<sp/>reply.<sp/>It<sp/>just<sp/>proceeds<sp/>to<sp/>advance<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fed-&gt;num_upstream<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a9322b3f6a014743c6447dccabe485db3" kindref="member">send_tag_advance_if_appropriate</ref>(fed);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>downstream<sp/>federates<sp/>to<sp/>see<sp/>whether<sp/>they<sp/>should<sp/>now<sp/>be<sp/>granted<sp/>a<sp/>TAG.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>handle<sp/>cycles,<sp/>need<sp/>to<sp/>create<sp/>a<sp/>boolean<sp/>array<sp/>to<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>of<sp/>which<sp/>upstream<sp/>federates<sp/>have<sp/>been<sp/>visited.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visited[NUMBER_OF_FEDERATES]<sp/>=<sp/>{<sp/>};<sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>initializer<sp/>initializes<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rti_8c_1ad3d3a13c504c13abe514b40d46c19cc5" kindref="member">transitive_send_TAG_if_appropriate</ref>(fed,<sp/>visited);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a2933ca68bad3d299217a22106b120a61" kindref="member">handle_time_advance_notice</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>fed)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)];</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a9d26e19c03e782593ba0f1791b7f35b5" kindref="member">read_from_socket_errexit</ref>(fed-&gt;socket,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>),<sp/>buffer,<sp/></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>read<sp/>the<sp/>content<sp/>of<sp/>the<sp/>time<sp/>advance<sp/>notice<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed-&gt;id);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Acquire<sp/>a<sp/>mutex<sp/>lock<sp/>to<sp/>ensure<sp/>that<sp/>this<sp/>state<sp/>does<sp/>change<sp/>while<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>message<sp/>is<sp/>in<sp/>transport<sp/>or<sp/>being<sp/>used<sp/>to<sp/>determine<sp/>a<sp/>TAG.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>fed-&gt;time_advance<sp/>=<sp/><ref refid="net__util_8c_1a3c03766b3fd76c7ad5901581a766caa8" kindref="member">extract_ll</ref>(buffer);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>from<sp/>federate<sp/>%d<sp/>the<sp/>Time<sp/>Advance<sp/>Notice<sp/>(TAN)<sp/>%lld.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;id,<sp/>fed-&gt;time_advance<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>TAN<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>most<sp/>recently<sp/>received<sp/>NET,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>NET<sp/>to<sp/>match<sp/>the<sp/>TAN.<sp/>The<sp/>NET<sp/>is<sp/>a<sp/>promise<sp/>that,<sp/>absent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>network<sp/>inputs,<sp/>the<sp/>federate<sp/>will<sp/>not<sp/>produce<sp/>an<sp/>output<sp/>with<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>less<sp/>than<sp/>the<sp/>NET.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>ta<sp/>=<sp/>(<ref refid="structtag__t" kindref="compound">tag_t</ref>)<sp/>{.time<sp/>=<sp/>fed-&gt;time_advance,<sp/>.microstep<sp/>=<sp/>0};</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(ta,<sp/>fed-&gt;next_event)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;next_event<sp/>=<sp/>ta;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>reply<sp/>just<sp/>as<sp/>if<sp/>this<sp/>were<sp/>a<sp/>NET<sp/>because<sp/>it<sp/>could<sp/>unblock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>network<sp/>input<sp/>port<sp/>control<sp/>reactions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fed-&gt;num_upstream<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a9322b3f6a014743c6447dccabe485db3" kindref="member">send_tag_advance_if_appropriate</ref>(fed);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>downstream<sp/>federates<sp/>to<sp/>see<sp/>whether<sp/>they<sp/>should<sp/>now<sp/>be<sp/>granted<sp/>a<sp/>TAG.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>handle<sp/>cycles,<sp/>need<sp/>to<sp/>create<sp/>a<sp/>boolean<sp/>array<sp/>to<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>of<sp/>which<sp/>upstream<sp/>federates<sp/>have<sp/>been<sp/>visited.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visited[NUMBER_OF_FEDERATES]<sp/>=<sp/>{<sp/>};<sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>initializer<sp/>initializes<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rti_8c_1ad3d3a13c504c13abe514b40d46c19cc5" kindref="member">transitive_send_TAG_if_appropriate</ref>(fed,<sp/>visited);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"></codeline>
<codeline lineno="827"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a94849214863f76b3f7c59a78bd2ad624" kindref="member">_lf_rti_stop_granted_already_sent_to_federates</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a4d99ea51641cde8d7d65c06e43581f19" kindref="member">_lf_rti_broadcast_stop_time_to_federates_already_locked</ref>()<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="rti_8c_1a94849214863f76b3f7c59a78bd2ad624" kindref="member">_lf_rti_stop_granted_already_sent_to_federates</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reply<sp/>with<sp/>a<sp/>stop<sp/>granted<sp/>to<sp/>all<sp/>federates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>outgoing_buffer[STOP_GRANTED_MESSAGE_LENGTH];</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>ENCODE_STOP_GRANTED(outgoing_buffer,<sp/>max_stop_tag.time,<sp/>max_stop_tag.microstep);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>federates<sp/>and<sp/>send<sp/>each<sp/>the<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUMBER_OF_FEDERATES;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(federates[i].state<sp/>==<sp/>NOT_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(federates[i].next_event,<sp/>max_stop_tag)<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>the<sp/>next_event<sp/>to<sp/>be<sp/>no<sp/>greater<sp/>than<sp/>the<sp/>stop<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federates[i].next_event<sp/>=<sp/>max_stop_tag;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0e3b7299eccba74fcd7a27f37642dc7e" kindref="member">write_to_socket_errexit</ref>(federates[i].socket,<sp/>STOP_GRANTED_MESSAGE_LENGTH,<sp/>outgoing_buffer,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>send<sp/>STOP_GRANTED<sp/>message<sp/>to<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>federates[i].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>sent<sp/>to<sp/>federates<sp/>STOP_GRANTED<sp/>with<sp/>tag<sp/>(%lld,<sp/>%u).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_stop_tag.time<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_stop_tag.microstep);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a94849214863f76b3f7c59a78bd2ad624" kindref="member">_lf_rti_stop_granted_already_sent_to_federates</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a884fcf0013b25e1f15ebefacec2b1f94" kindref="member">_lf_rti_mark_federate_requesting_stop</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>fed)<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fed-&gt;requested_stop)<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>that<sp/>the<sp/>federate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>requested<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_feds_handling_stop++;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;requested_stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_feds_handling_stop<sp/>==<sp/>NUMBER_OF_FEDERATES)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>now<sp/>have<sp/>information<sp/>about<sp/>the<sp/>stop<sp/>time<sp/>of<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>federates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a4d99ea51641cde8d7d65c06e43581f19" kindref="member">_lf_rti_broadcast_stop_time_to_federates_already_locked</ref>();</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a76bea17520db7f471b8a04d20c7db5f5" kindref="member">handle_stop_request_message</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>fed)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>handling<sp/>stop_request<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed-&gt;id);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_to_read<sp/>=<sp/>STOP_REQUEST_MESSAGE_LENGTH<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[bytes_to_read];</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a9d26e19c03e782593ba0f1791b7f35b5" kindref="member">read_from_socket_errexit</ref>(fed-&gt;socket,<sp/>bytes_to_read,<sp/>buffer,<sp/></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>read<sp/>the<sp/>STOP_REQUEST<sp/>payload<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed-&gt;id);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Acquire<sp/>a<sp/>mutex<sp/>lock<sp/>to<sp/>ensure<sp/>that<sp/>this<sp/>state<sp/>does<sp/>change<sp/>while<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>message<sp/>is<sp/>in<sp/>transport<sp/>or<sp/>being<sp/>used<sp/>to<sp/>determine<sp/>a<sp/>TAG.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;rti_mutex);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>we<sp/>have<sp/>already<sp/>received<sp/>a<sp/>stop_tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>this<sp/>federate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(federates[fed-&gt;id].requested_stop)<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>this<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>proposed<sp/>stop<sp/>tag<sp/>for<sp/>the<sp/>federate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>proposed_stop_tag;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>proposed_stop_tag.time<sp/>=<sp/><ref refid="net__util_8c_1a3c03766b3fd76c7ad5901581a766caa8" kindref="member">extract_ll</ref>(buffer);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>proposed_stop_tag.microstep<sp/>=<sp/><ref refid="net__util_8c_1a2c3e1559ae8f31e111cedc00211edded" kindref="member">extract_int</ref>(&amp;(buffer[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)]));</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>maximum<sp/>stop<sp/>tag<sp/>received<sp/>from<sp/>federates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(proposed_stop_tag,<sp/>max_stop_tag)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_stop_tag<sp/>=<sp/>proposed_stop_tag;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>from<sp/>federate<sp/>%d<sp/>a<sp/>STOP_REQUEST<sp/>message<sp/>with<sp/>tag<sp/>(%lld,<sp/>%u).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;id,<sp/>proposed_stop_tag.time<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,<sp/>proposed_stop_tag.microstep);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>federate<sp/>has<sp/>not<sp/>already<sp/>asked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>a<sp/>stop,<sp/>add<sp/>it<sp/>to<sp/>the<sp/>tally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a884fcf0013b25e1f15ebefacec2b1f94" kindref="member">_lf_rti_mark_federate_requesting_stop</ref>(fed);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_feds_handling_stop<sp/>==<sp/>NUMBER_OF_FEDERATES)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>now<sp/>have<sp/>information<sp/>about<sp/>the<sp/>stop<sp/>time<sp/>of<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>federates.<sp/>This<sp/>is<sp/>extremely<sp/>unlikely,<sp/>but<sp/>it<sp/>can<sp/>occur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>federates<sp/>call<sp/>request_stop()<sp/>at<sp/>the<sp/>same<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>the<sp/>stop<sp/>request<sp/>to<sp/>all<sp/>other<sp/>federates<sp/>that<sp/>have<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>issued<sp/>a<sp/>stop<sp/>request.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stop_request_buffer[STOP_REQUEST_MESSAGE_LENGTH];</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>ENCODE_STOP_REQUEST(stop_request_buffer,<sp/>max_stop_tag.time,<sp/>max_stop_tag.microstep);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>federates<sp/>and<sp/>send<sp/>each<sp/>the<sp/>STOP_REQUEST<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>do<sp/>not<sp/>have<sp/>a<sp/>stop_time<sp/>already<sp/>for<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUMBER_OF_FEDERATES;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(federates[i].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>fed-&gt;id<sp/>&amp;&amp;<sp/>federates[i].requested_stop<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(federates[i].state<sp/>==<sp/>NOT_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a884fcf0013b25e1f15ebefacec2b1f94" kindref="member">_lf_rti_mark_federate_requesting_stop</ref>(&amp;federates[i]);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0e3b7299eccba74fcd7a27f37642dc7e" kindref="member">write_to_socket_errexit</ref>(federates[i].socket,<sp/>STOP_REQUEST_MESSAGE_LENGTH,<sp/>stop_request_buffer,</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>forward<sp/>STOP_REQUEST<sp/>message<sp/>to<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>federates[i].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>forwarded<sp/>to<sp/>federates<sp/>STOP_REQUEST<sp/>with<sp/>tag<sp/>(%lld,<sp/>%u).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_stop_tag.time<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_stop_tag.microstep);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1aa21c2b5333b021d6308a807c1f9e8844" kindref="member">handle_stop_request_reply</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>fed)<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_to_read<sp/>=<sp/>STOP_REQUEST_REPLY_MESSAGE_LENGTH<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer_stop_time[bytes_to_read];</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a9d26e19c03e782593ba0f1791b7f35b5" kindref="member">read_from_socket_errexit</ref>(fed-&gt;socket,<sp/>bytes_to_read,<sp/>buffer_stop_time,<sp/></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>read<sp/>the<sp/>reply<sp/>to<sp/>STOP_REQUEST<sp/>message<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed-&gt;id);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtag__t" kindref="compound">tag_t</ref><sp/>federate_stop_tag;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>federate_stop_tag.time<sp/>=<sp/><ref refid="net__util_8c_1a3c03766b3fd76c7ad5901581a766caa8" kindref="member">extract_ll</ref>(buffer_stop_time);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>federate_stop_tag.microstep<sp/>=<sp/><ref refid="net__util_8c_1a2c3e1559ae8f31e111cedc00211edded" kindref="member">extract_int</ref>(&amp;(buffer_stop_time[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)]));</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>from<sp/>federate<sp/>%d<sp/>STOP<sp/>reply<sp/>tag<sp/>(%lld,<sp/>%u).&quot;</highlight><highlight class="normal">,<sp/>fed-&gt;id,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federate_stop_tag.time<sp/>-<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federate_stop_tag.microstep);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Acquire<sp/>the<sp/>mutex<sp/>lock<sp/>so<sp/>that<sp/>we<sp/>can<sp/>change<sp/>the<sp/>state<sp/>of<sp/>the<sp/>RTI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>federate<sp/>has<sp/>not<sp/>requested<sp/>stop<sp/>before,<sp/>count<sp/>the<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tag_8c_1a6f9d6db9250698b048f5f118b0308e47" kindref="member">compare_tags</ref>(federate_stop_tag,<sp/>max_stop_tag)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_stop_tag<sp/>=<sp/>federate_stop_tag;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a884fcf0013b25e1f15ebefacec2b1f94" kindref="member">_lf_rti_mark_federate_requesting_stop</ref>(fed);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"></codeline>
<codeline lineno="1001"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1ad656484a8676e0e0917e747aa879dfcc" kindref="member">handle_address_query</ref>(<ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref><sp/>fed_id)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>buffer<sp/>both<sp/>for<sp/>reading<sp/>and<sp/>constructing<sp/>the<sp/>reply.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>length<sp/>is<sp/>what<sp/>is<sp/>needed<sp/>for<sp/>the<sp/>reply.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int)];</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_read<sp/>=<sp/><ref refid="net__util_8c_1a9426930d10448b1f16f6afee07777f88" kindref="member">read_from_socket</ref>(federates[fed_id].socket,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref>),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)buffer);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a7389ef15e70a377a52086e6d6b956d70" kindref="member">error_print_and_exit</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>address<sp/>query.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref><sp/>remote_fed_id<sp/>=<sp/><ref refid="net__util_8c_1ab52445dc6792e1d40424c4e0edc18704" kindref="member">extract_ushort</ref>(buffer);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>address<sp/>query<sp/>from<sp/>%d<sp/>for<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed_id,<sp/>remote_fed_id);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(federates[remote_fed_id].server_port<sp/>&lt;<sp/>65536);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>server_port<sp/>initializes<sp/>to<sp/>-1,<sp/>which<sp/>means<sp/>the<sp/>RTI<sp/>does<sp/>not<sp/>know</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>port<sp/>number<sp/>because<sp/>it<sp/>has<sp/>not<sp/>yet<sp/>received<sp/>an<sp/>ADDRESS_AD<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>this<sp/>federate.<sp/>It<sp/>will<sp/>respond<sp/>by<sp/>sending<sp/>-1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>the<sp/>port<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1af4312040e137fb9d644f96edaa74075d" kindref="member">encode_int</ref>(federates[remote_fed_id].server_port,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)buffer);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>port<sp/>number<sp/>(which<sp/>could<sp/>be<sp/>-1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0e3b7299eccba74fcd7a27f37642dc7e" kindref="member">write_to_socket_errexit</ref>(federates[fed_id].socket,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)buffer,</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>port<sp/>number<sp/>to<sp/>socket<sp/>of<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>server<sp/>IP<sp/>address<sp/>to<sp/>federate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0e3b7299eccba74fcd7a27f37642dc7e" kindref="member">write_to_socket_errexit</ref>(federates[fed_id].socket,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(federates[remote_fed_id].server_ip_addr),</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;federates[remote_fed_id].server_ip_addr,</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>ip<sp/>address<sp/>to<sp/>socket<sp/>of<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(federates[remote_fed_id].server_port<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Replied<sp/>to<sp/>address<sp/>query<sp/>from<sp/>federate<sp/>%d<sp/>with<sp/>address<sp/>%s:%d.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed_id,<sp/>federates[remote_fed_id].server_hostname,<sp/>federates[remote_fed_id].server_port);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1afff97113d09ec861260d1ea041fe20c5" kindref="member">handle_address_ad</ref>(<ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref><sp/>federate_id)<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>port<sp/>number<sp/>of<sp/>the<sp/>federate<sp/>that<sp/>can<sp/>be<sp/>used<sp/>for<sp/>physical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>connections<sp/>to<sp/>other<sp/>federates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>server_port<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int)];</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_read<sp/>=<sp/><ref refid="net__util_8c_1a9426930d10448b1f16f6afee07777f88" kindref="member">read_from_socket</ref>(federates[federate_id].socket,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)buffer);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>port<sp/>data<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>federates[federate_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Leave<sp/>the<sp/>server<sp/>port<sp/>at<sp/>-1,<sp/>which<sp/>mean<sp/>&quot;I<sp/>don&apos;t<sp/>know&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>server_port<sp/>=<sp/><ref refid="net__util_8c_1a2c3e1559ae8f31e111cedc00211edded" kindref="member">extract_int</ref>(buffer);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[federate_id].server_port<sp/>=<sp/>server_port;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Received<sp/>address<sp/>advertisement<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>federate_id);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a9cf552da2c0c98857a8f772fe19c4e9d" kindref="member">handle_timestamp</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref><sp/>*my_fed)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[8];</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>bytes<sp/>from<sp/>the<sp/>socket.<sp/>We<sp/>need<sp/>8<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_read<sp/>=<sp/><ref refid="net__util_8c_1a9426930d10448b1f16f6afee07777f88" kindref="member">read_from_socket</ref>(my_fed-&gt;socket,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;buffer);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>reading<sp/>timestamp<sp/>from<sp/>federate<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>my_fed-&gt;id);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref><sp/>timestamp<sp/>=<sp/><ref refid="net__util_8c_1a8030d5345c501ee7d9bbfffa75b85dd5" kindref="member">swap_bytes_if_big_endian_ll</ref>(*((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*)(&amp;buffer)));</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>timestamp<sp/>message:<sp/>%lld.&quot;</highlight><highlight class="normal">,<sp/>timestamp);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>num_feds_proposed_start++;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timestamp<sp/>&gt;<sp/>max_start_time)<sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_start_time<sp/>=<sp/>timestamp;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_feds_proposed_start<sp/>==<sp/>NUMBER_OF_FEDERATES)<sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>federates<sp/>have<sp/>proposed<sp/>a<sp/>start<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;received_start_times);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>federates<sp/>have<sp/>not<sp/>yet<sp/>proposed<sp/>a<sp/>start<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>a<sp/>notification.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_feds_proposed_start<sp/>&lt;<sp/>NUMBER_OF_FEDERATES)<sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Should<sp/>have<sp/>a<sp/>timeout<sp/>here?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;received_start_times,<sp/>&amp;rti_mutex);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>back<sp/>to<sp/>the<sp/>federate<sp/>the<sp/>maximum<sp/>time<sp/>plus<sp/>an<sp/>offset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>by<sp/>sending<sp/>a<sp/>timestamp<sp/>marker.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>message_marker<sp/>=<sp/><ref refid="rti_8h_1ac59bf49f337079e65fe54acbfa21977e" kindref="member">TIMESTAMP</ref>;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_written<sp/>=<sp/><ref refid="net__util_8c_1ae9bab7965862259f354a419e4140b564" kindref="member">write_to_socket</ref>(my_fed-&gt;socket,<sp/>1,<sp/>&amp;message_marker);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>sending<sp/>timestamp<sp/>to<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>my_fed-&gt;id);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>timestamp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>an<sp/>offset<sp/>to<sp/>this<sp/>start<sp/>time<sp/>to<sp/>get<sp/>everyone<sp/>starting<sp/>together.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref><sp/>=<sp/>max_start_time<sp/>+<sp/><ref refid="rti_8h_1a4b8c713b515dba0c86d9205dc0caf4ed" kindref="member">DELAY_START</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>message<sp/>=<sp/><ref refid="net__util_8c_1a8030d5345c501ee7d9bbfffa75b85dd5" kindref="member">swap_bytes_if_big_endian_ll</ref>(<ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes_written<sp/>=<sp/><ref refid="net__util_8c_1ae9bab7965862259f354a419e4140b564" kindref="member">write_to_socket</ref>(my_fed-&gt;socket,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(&amp;message));</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>sending<sp/>starting<sp/>time<sp/>to<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>my_fed-&gt;id);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>state<sp/>for<sp/>the<sp/>federate<sp/>to<sp/>indicate<sp/>that<sp/>the<sp/>TIMESTAMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>message<sp/>has<sp/>been<sp/>sent.<sp/>That<sp/>TIMESTAMP<sp/>message<sp/>grants<sp/>time<sp/>advance<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>federate<sp/>to<sp/>the<sp/>start<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>my_fed-&gt;state<sp/>=<sp/>GRANTED;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;sent_start_time);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>sent<sp/>start<sp/>time<sp/>%lld<sp/>to<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref>,<sp/>my_fed-&gt;id);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1ae65499dda32878c5d123206e37732bf2" kindref="member">_lf_rti_send_physical_clock</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>message_type,<sp/><ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>fed,<sp/>socket_type_t<sp/>socket_type)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fed-&gt;state<sp/>==<sp/>NOT_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a31c6c0670e0e0d97586def29f10bf7d4" kindref="member">warning_print</ref>(</highlight><highlight class="stringliteral">&quot;Clock<sp/>sync:<sp/>RTI<sp/>failed<sp/>to<sp/>send<sp/>physical<sp/>time<sp/>to<sp/>federate<sp/>%d.<sp/>Socket<sp/>not<sp/>connected.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;id);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[0]<sp/>=<sp/>message_type;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref><sp/>current_physical_time<sp/>=<sp/><ref refid="tag_8c_1a84d52b3843db3b4fcb932326d6b288c4" kindref="member">get_physical_time</ref>();</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0b8cbad5d6dc462c87eb48c6a5519c33" kindref="member">encode_ll</ref>(current_physical_time,<sp/>&amp;(buffer[1]));</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_type<sp/>==<sp/>UDP)<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>UDP_addr<sp/>is<sp/>never<sp/>initialized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Clock<sp/>sync:<sp/>RTI<sp/>sending<sp/>UDP<sp/>message<sp/>type<sp/>%u.&quot;</highlight><highlight class="normal">,<sp/>buffer[0]);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_written<sp/>=<sp/>sendto(<ref refid="rti_8c_1a441e2e84bdd5cb0bc229623741d2bbed" kindref="member">socket_descriptor_UDP</ref>,<sp/>buffer,<sp/>1<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>),<sp/>0,</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr*)&amp;fed-&gt;UDP_addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fed-&gt;UDP_addr));</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>)<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a31c6c0670e0e0d97586def29f10bf7d4" kindref="member">warning_print</ref>(</highlight><highlight class="stringliteral">&quot;Clock<sp/>sync:<sp/>RTI<sp/>failed<sp/>to<sp/>send<sp/>physical<sp/>time<sp/>to<sp/>federate<sp/>%d:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;id,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_type<sp/>==<sp/>TCP)<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Clock<sp/>sync:<sp/><sp/>RTI<sp/>sending<sp/>TCP<sp/>message<sp/>type<sp/>%u.&quot;</highlight><highlight class="normal">,<sp/>buffer[0]);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0e3b7299eccba74fcd7a27f37642dc7e" kindref="member">write_to_socket_errexit</ref>(fed-&gt;socket,<sp/>1<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref>),<sp/>buffer,</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Clock<sp/>sync:<sp/>RTI<sp/>failed<sp/>to<sp/>send<sp/>physical<sp/>time<sp/>to<sp/>federate<sp/>%d:<sp/>%s.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;id,</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Clock<sp/>sync:<sp/>RTI<sp/>sent<sp/>PHYSICAL_TIME_SYNC_MESSAGE<sp/>with<sp/>timestamp<sp/>%lld<sp/>to<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_physical_time,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed-&gt;id);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1ac5c5af408abe8a53506b2fb406046e14" kindref="member">handle_physical_clock_sync_message</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>my_fed,<sp/>socket_type_t<sp/>socket_type)<sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>the<sp/>mutex<sp/>to<sp/>prevent<sp/>interference<sp/>between<sp/>sending<sp/>the<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coded<sp/>probe<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reply<sp/>with<sp/>a<sp/>T4<sp/>type<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rti_8c_1ae65499dda32878c5d123206e37732bf2" kindref="member">_lf_rti_send_physical_clock</ref>(PHYSICAL_CLOCK_SYNC_MESSAGE_T4,<sp/>my_fed,<sp/>socket_type);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>corresponding<sp/>coded<sp/>probe<sp/>immediately<sp/>after,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>only<sp/>if<sp/>this<sp/>is<sp/>a<sp/>UDP<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_type<sp/>==<sp/>UDP)<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1ae65499dda32878c5d123206e37732bf2" kindref="member">_lf_rti_send_physical_clock</ref>(<ref refid="rti_8h_1a20be238dc0a124a1bab9b7f5bf449fc7" kindref="member">PHYSICAL_CLOCK_SYNC_MESSAGE_T4_CODED_PROBE</ref>,<sp/>my_fed,<sp/>socket_type);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_LF_CLOCK_SYNC_ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>clock_synchronization_thread(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>noargs)<sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>all<sp/>federates<sp/>have<sp/>been<sp/>notified<sp/>of<sp/>the<sp/>start<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Use<sp/>lf_<sp/>version<sp/>of<sp/>this<sp/>when<sp/>merged<sp/>with<sp/>master.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_feds_proposed_start<sp/>&lt;<sp/>NUMBER_OF_FEDERATES)<sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;received_start_times,<sp/>&amp;rti_mutex);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>the<sp/>start<sp/>time<sp/>before<sp/>starting<sp/>clock<sp/>synchronization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>wait<sp/>ensures<sp/>that<sp/>start_time<sp/>has<sp/>been<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tag_8h_1a181bf532390385b9092615f354cccf87" kindref="member">interval_t</ref><sp/>ns_to_wait<sp/>=<sp/><ref refid="tag_8c_1a20b56e8fb05c017508f1c4fa2e311a87" kindref="member">start_time</ref><sp/>-<sp/><ref refid="tag_8c_1a84d52b3843db3b4fcb932326d6b288c4" kindref="member">get_physical_time</ref>();</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ns_to_wait<sp/>&gt;<sp/>0LL)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>wait_time<sp/>=<sp/>{ns_to_wait<sp/>/<sp/>BILLION,<sp/>ns_to_wait<sp/>%<sp/>BILLION};</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>rem_time;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nanosleep(&amp;wait_time,<sp/>&amp;rem_time);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initiate<sp/>a<sp/>clock<sp/>synchronization<sp/>every<sp/>_LF_CLOCK_SYNC_PERIOD_NS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>sleep_time<sp/>=<sp/>{(time_t)<sp/>_LF_CLOCK_SYNC_PERIOD_NS<sp/>/<sp/>BILLION,</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_LF_CLOCK_SYNC_PERIOD_NS<sp/>%<sp/>BILLION};</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>remaining_time;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_federates_connected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(any_federates_connected)<sp/>{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nanosleep(&amp;sleep_time,<sp/>&amp;remaining_time);<sp/></highlight><highlight class="comment">//<sp/>Can<sp/>be<sp/>interrupted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any_federates_connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fed<sp/>=<sp/>0;<sp/>fed<sp/>&lt;<sp/>NUMBER_OF_FEDERATES;<sp/>fed++)<sp/>{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(federates[fed].state<sp/>==<sp/>NOT_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>We<sp/>need<sp/>better<sp/>error<sp/>handling<sp/>here,<sp/>but<sp/>clock<sp/>sync<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>not<sp/>stop<sp/>execution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;Clock<sp/>sync<sp/>failed<sp/>with<sp/>federate<sp/>%d.<sp/>Not<sp/>connected.&quot;</highlight><highlight class="normal">,<sp/>federates[fed].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_lf_rti_mark_federate_requesting_stop(&amp;federates[fed]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!federates[fed].clock_synchronization_enabled)<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>RTI&apos;s<sp/>current<sp/>physical<sp/>time<sp/>to<sp/>the<sp/>federate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>on<sp/>UDP.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>sending<sp/>T1<sp/>message<sp/>to<sp/>initiate<sp/>clock<sp/>sync<sp/>round.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1ae65499dda32878c5d123206e37732bf2" kindref="member">_lf_rti_send_physical_clock</ref>(<ref refid="rti_8h_1a31f24c0e324077c60e4ded8a30b15978" kindref="member">PHYSICAL_CLOCK_SYNC_MESSAGE_T1</ref>,<sp/>&amp;federates[fed],<sp/>UDP);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Listen<sp/>for<sp/>reply<sp/>message,<sp/>which<sp/>should<sp/>be<sp/>T3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>message_size<sp/>=<sp/>1<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[message_size];</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>number<sp/>of<sp/>messages<sp/>that<sp/>we<sp/>discard<sp/>before<sp/>giving<sp/>up<sp/>on<sp/>this<sp/>cycle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>T3<sp/>message<sp/>from<sp/>this<sp/>federate<sp/>does<sp/>not<sp/>arrive<sp/>and<sp/>we<sp/>keep<sp/>receiving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>messages,<sp/>then<sp/>give<sp/>up<sp/>on<sp/>this<sp/>federate<sp/>and<sp/>move<sp/>to<sp/>the<sp/>next<sp/>federate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remaining_attempts<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(remaining_attempts<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_attempts--;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_read<sp/>=<sp/><ref refid="net__util_8c_1a9426930d10448b1f16f6afee07777f88" kindref="member">read_from_socket</ref>(<ref refid="rti_8c_1a441e2e84bdd5cb0bc229623741d2bbed" kindref="member">socket_descriptor_UDP</ref>,<sp/>message_size,<sp/>buffer);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>any<sp/>errors<sp/>occur,<sp/>either<sp/>discard<sp/>the<sp/>message<sp/>or<sp/>the<sp/>clock<sp/>sync<sp/>round.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>==<sp/>message_size)<sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[0]<sp/>==<sp/>PHYSICAL_CLOCK_SYNC_MESSAGE_T3)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fed_id<sp/>=<sp/><ref refid="net__util_8c_1a2c3e1559ae8f31e111cedc00211edded" kindref="member">extract_int</ref>(&amp;(buffer[1]));</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>this<sp/>message<sp/>came<sp/>from<sp/>the<sp/>correct<sp/>federate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fed_id<sp/>!=<sp/>federates[fed].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Message<sp/>is<sp/>from<sp/>the<sp/>wrong<sp/>federate.<sp/>Discard<sp/>the<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a31c6c0670e0e0d97586def29f10bf7d4" kindref="member">warning_print</ref>(</highlight><highlight class="stringliteral">&quot;Clock<sp/>sync:<sp/>Received<sp/>T3<sp/>message<sp/>from<sp/>federate<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;but<sp/>expected<sp/>one<sp/>from<sp/>%d.<sp/>Discarding<sp/>message.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed_id,<sp/>federates[fed].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Clock<sp/>sync:<sp/>RTI<sp/>received<sp/>T3<sp/>message<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1ac5c5af408abe8a53506b2fb406046e14" kindref="member">handle_physical_clock_sync_message</ref>(&amp;federates[fed_id],<sp/>UDP);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>message<sp/>is<sp/>not<sp/>a<sp/>T3<sp/>message.<sp/>Discard<sp/>the<sp/>message<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>continue<sp/>waiting<sp/>for<sp/>the<sp/>T3<sp/>message.<sp/>This<sp/>is<sp/>possibly<sp/>a<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>a<sp/>previous<sp/>cycle<sp/>that<sp/>was<sp/>discarded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a31c6c0670e0e0d97586def29f10bf7d4" kindref="member">warning_print</ref>(</highlight><highlight class="stringliteral">&quot;Clock<sp/>sync:<sp/>Unexpected<sp/>UDP<sp/>message<sp/>%u.<sp/>Expected<sp/>%u<sp/>from<sp/>federate<sp/>%d.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Discarding<sp/>message.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0],</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PHYSICAL_CLOCK_SYNC_MESSAGE_T3,</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federates[fed].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a31c6c0670e0e0d97586def29f10bf7d4" kindref="member">warning_print</ref>(</highlight><highlight class="stringliteral">&quot;Clock<sp/>sync:<sp/>Read<sp/>from<sp/>UDP<sp/>socket<sp/>failed:<sp/>%s.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Skipping<sp/>clock<sp/>sync<sp/>round<sp/>for<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strerror(errno),</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federates[fed].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_attempts<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining_attempts<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any_federates_connected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_LF_CLOCK_SYNC_ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a7a50a2d7ea45420d332bc7444ce34518" kindref="member">handle_federate_resign</ref>(<ref refid="structfederate__t" kindref="compound">federate_t</ref><sp/>*my_fed)<sp/>{</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>more<sp/>to<sp/>do.<sp/>Close<sp/>the<sp/>socket<sp/>and<sp/>exit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>my_fed-&gt;state<sp/>=<sp/>NOT_CONNECTED;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>The<sp/>following<sp/>results<sp/>in<sp/>spurious<sp/>error<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_lf_rti_mark_federate_requesting_stop(my_fed);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicate<sp/>that<sp/>there<sp/>will<sp/>no<sp/>further<sp/>events<sp/>from<sp/>this<sp/>federate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>my_fed-&gt;next_event<sp/>=<sp/>FOREVER_TAG;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>my_fed-&gt;time_advance<sp/>=<sp/>FOREVER;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>According<sp/>to<sp/>this:<sp/>https://stackoverflow.com/questions/4160347/close-vs-shutdown-socket,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>close<sp/>should<sp/>happen<sp/>when<sp/>receiving<sp/>a<sp/>0<sp/>length<sp/>message<sp/>from<sp/>the<sp/>other<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here,<sp/>we<sp/>just<sp/>signal<sp/>the<sp/>other<sp/>side<sp/>that<sp/>no<sp/>further<sp/>writes<sp/>to<sp/>the<sp/>socket<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forthcoming,<sp/>which<sp/>should<sp/>result<sp/>in<sp/>the<sp/>other<sp/>end<sp/>getting<sp/>a<sp/>zero-length<sp/>reception.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>shutdown(my_fed-&gt;socket,<sp/>SHUT_WR);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>close<sp/>because<sp/>this<sp/>results<sp/>in<sp/>an<sp/>error<sp/>on<sp/>the<sp/>other<sp/>side<sp/>rather<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>orderly<sp/>shutdown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>close(my_fed-&gt;socket);<sp/>//<sp/><sp/>from<sp/>unistd.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8c_1ab831b6ca5cfb47d7d4b3f15ef8e0f053" kindref="member">info_print</ref>(</highlight><highlight class="stringliteral">&quot;Federate<sp/>%d<sp/>has<sp/>resigned.&quot;</highlight><highlight class="normal">,<sp/>my_fed-&gt;id);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>downstream<sp/>federates<sp/>to<sp/>see<sp/>whether<sp/>they<sp/>should<sp/>now<sp/>be<sp/>granted<sp/>a<sp/>TAG.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>handle<sp/>cycles,<sp/>need<sp/>to<sp/>create<sp/>a<sp/>boolean<sp/>array<sp/>to<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>of<sp/>which<sp/>upstream<sp/>federates<sp/>have<sp/>been<sp/>visited.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visited[NUMBER_OF_FEDERATES]<sp/>=<sp/>{<sp/>};<sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>initializer<sp/>initializes<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rti_8c_1ad3d3a13c504c13abe514b40d46c19cc5" kindref="member">transitive_send_TAG_if_appropriate</ref>(my_fed,<sp/>visited);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;rti_mutex);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="rti_8c_1a828e8b3024c90a3b1fcefec8288ca348" kindref="member">federate_thread_TCP</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>fed)<sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfederate__t" kindref="compound">federate_t</ref>*<sp/>my_fed<sp/>=<sp/>(<ref refid="structfederate__t" kindref="compound">federate_t</ref>*)fed;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buffer<sp/>for<sp/>incoming<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>does<sp/>not<sp/>constrain<sp/>the<sp/>message<sp/>size<sp/>because<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>forwarded<sp/>piece<sp/>by<sp/>piece.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[<ref refid="rti_8h_1acc95612e1d2dbbdf34afe76d50e75223" kindref="member">FED_COM_BUFFER_SIZE</ref>];</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Listen<sp/>for<sp/>messages<sp/>from<sp/>the<sp/>federate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(my_fed-&gt;state<sp/>!=<sp/>NOT_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>no<sp/>more<sp/>than<sp/>one<sp/>byte<sp/>to<sp/>get<sp/>the<sp/>message<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_read<sp/>=<sp/><ref refid="net__util_8c_1a9426930d10448b1f16f6afee07777f88" kindref="member">read_from_socket</ref>(my_fed-&gt;socket,<sp/>1,<sp/>buffer);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Socket<sp/>is<sp/>closed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a31c6c0670e0e0d97586def29f10bf7d4" kindref="member">warning_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI:<sp/>Socket<sp/>to<sp/>federate<sp/>%d<sp/>is<sp/>closed.<sp/>Exiting<sp/>the<sp/>thread.&quot;</highlight><highlight class="normal">,<sp/>my_fed-&gt;id);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>my_fed-&gt;state<sp/>=<sp/>NOT_CONNECTED;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>my_fed-&gt;socket<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>We<sp/>need<sp/>better<sp/>error<sp/>handling<sp/>here,<sp/>but<sp/>this<sp/>is<sp/>probably<sp/>not<sp/>the<sp/>right<sp/>thing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_lf_rti_mark_federate_requesting_stop(my_fed);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(buffer[0])<sp/>{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rti_8h_1ac59bf49f337079e65fe54acbfa21977e" kindref="member">TIMESTAMP</ref>:</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a9cf552da2c0c98857a8f772fe19c4e9d" kindref="member">handle_timestamp</ref>(my_fed);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rti_8h_1a78332727fe2ecd72cb7e47881a87d494" kindref="member">ADDRESS_QUERY</ref>:</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1ad656484a8676e0e0917e747aa879dfcc" kindref="member">handle_address_query</ref>(my_fed-&gt;id);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rti_8h_1a4f0f800c091729c481a6ce0f3bac4ca4" kindref="member">ADDRESS_AD</ref>:</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1afff97113d09ec861260d1ea041fe20c5" kindref="member">handle_address_ad</ref>(my_fed-&gt;id);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rti_8h_1a0283943cd958ee91edaffe4dd45782f1" kindref="member">TIMED_MESSAGE</ref>:</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1afc6a599f3f5b9cf66a147b0f9ca657c8" kindref="member">handle_timed_message</ref>(my_fed,<sp/>buffer);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rti_8h_1abed4d766c1f54069227b5cb054b8c198" kindref="member">RESIGN</ref>:</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a7a50a2d7ea45420d332bc7444ce34518" kindref="member">handle_federate_resign</ref>(my_fed);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rti_8h_1a40f3720fa53cce015534fb7246006645" kindref="member">NEXT_EVENT_TAG</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a77dee2c405d4fe62278a1cf972272bd2" kindref="member">handle_next_event_tag</ref>(my_fed);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rti_8h_1a01049d88b81bb8b6e6b3e8242e435c50" kindref="member">TIME_ADVANCE_NOTICE</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a2933ca68bad3d299217a22106b120a61" kindref="member">handle_time_advance_notice</ref>(my_fed);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rti_8h_1a5c99fcbbcca0bf2d2ca961d769f2fbb1" kindref="member">LOGICAL_TAG_COMPLETE</ref>:</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a6bba97c8acc2b80259f8b94b01e1697d" kindref="member">handle_logical_tag_complete</ref>(my_fed);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rti_8h_1af423f7742f891187e4dcafce5c41844a" kindref="member">STOP_REQUEST</ref>:</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a76bea17520db7f471b8a04d20c7db5f5" kindref="member">handle_stop_request_message</ref>(my_fed);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rti_8h_1a8fd3e44be8050c9f7d97252fe00cbddf" kindref="member">STOP_REQUEST_REPLY</ref>:</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1aa21c2b5333b021d6308a807c1f9e8844" kindref="member">handle_stop_request_reply</ref>(my_fed);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="rti_8h_1a82ec41cec8ce47732562301bd2155e54" kindref="member">PORT_ABSENT</ref>:</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a6696c6969eb341c48269c2da6cec0caf" kindref="member">handle_port_absent_message</ref>(my_fed,<sp/>buffer);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>from<sp/>federate<sp/>%d<sp/>an<sp/>unrecognized<sp/>TCP<sp/>message<sp/>type:<sp/>%u.&quot;</highlight><highlight class="normal">,<sp/>my_fed-&gt;id,<sp/>buffer[0]);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>more<sp/>to<sp/>do.<sp/>Close<sp/>the<sp/>socket<sp/>and<sp/>exit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>close(my_fed-&gt;socket);<sp/></highlight><highlight class="comment">//<sp/><sp/>from<sp/>unistd.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1acf8907ccab075522f7b84de579d50030" kindref="member">connect_to_federates</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>socket_descriptor)<sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUMBER_OF_FEDERATES;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>an<sp/>incoming<sp/>connection<sp/>request.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr<sp/>client_fd;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>client_length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(client_fd);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>blocks<sp/>until<sp/>a<sp/>federate<sp/>connects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>socket_id<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)<sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket_id<sp/>=<sp/>accept(<ref refid="rti_8c_1a932b0f404c230fc102373b565ad39084" kindref="member">socket_descriptor_TCP</ref>,<sp/>&amp;client_fd,<sp/>&amp;client_length);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_id<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Got<sp/>a<sp/>socket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_id<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>(errno<sp/>!=<sp/>EAGAIN<sp/>||<sp/>errno<sp/>!=<sp/>EWOULDBLOCK))<sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a7389ef15e70a377a52086e6d6b956d70" kindref="member">error_print_and_exit</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>accept<sp/>the<sp/>socket.<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a31c6c0670e0e0d97586def29f10bf7d4" kindref="member">warning_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>accept<sp/>the<sp/>socket.<sp/>%s.<sp/>Trying<sp/>again.&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>message<sp/>from<sp/>the<sp/>federate<sp/>should<sp/>contain<sp/>its<sp/>ID<sp/>and<sp/>the<sp/>federation<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buffer<sp/>for<sp/>message<sp/>ID,<sp/>federate<sp/>ID,<sp/>and<sp/>federation<sp/>ID<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref>)<sp/>+<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>be<sp/>4.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[length];</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>bytes<sp/>from<sp/>the<sp/>socket.<sp/>We<sp/>need<sp/>4<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>should<sp/>not<sp/>exit<sp/>with<sp/>error<sp/>but<sp/>rather<sp/>should<sp/>just<sp/>reject<sp/>the<sp/>connection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a9d26e19c03e782593ba0f1791b7f35b5" kindref="member">read_from_socket_errexit</ref>(socket_id,<sp/>length,<sp/>buffer,<sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>read<sp/>from<sp/>accepted<sp/>socket.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>debug_print(&quot;read<sp/>%d<sp/>bytes.\n&quot;,<sp/>bytes_read);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>any<sp/>error<sp/>occurs,<sp/>this<sp/>will<sp/>be<sp/>set<sp/>to<sp/>non-zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>error_code<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref><sp/>fed_id<sp/>=<sp/>NUMBER_OF_FEDERATES;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>byte<sp/>received<sp/>is<sp/>the<sp/>message<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[0]<sp/>!=<sp/><ref refid="rti_8h_1af7370318c7e1ddead64c1a262b632c20" kindref="member">FED_ID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffer[0]<sp/>==<sp/><ref refid="rti_8h_1a91cf0e11a78e0b94952a2151993fc9c2" kindref="member">P2P_SENDING_FED_ID</ref><sp/>||<sp/>buffer[0]<sp/>==<sp/><ref refid="rti_8h_1a6ef14664d9d9d95f792d7f847bc5b119" kindref="member">P2P_TIMED_MESSAGE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>connection<sp/>is<sp/>a<sp/>peer-to-peer<sp/>connection<sp/>between<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>federates,<sp/>reject<sp/>the<sp/>connection<sp/>with<sp/>the<sp/>WRONG_SERVER<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_code<sp/>=<sp/><ref refid="rti_8h_1a5a6c87886a0136b58ae5bb1d627c7ae3" kindref="member">WRONG_SERVER</ref>;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_code<sp/>=<sp/><ref refid="rti_8h_1ae2e1a44a10d4219f4645a4e99fee009c" kindref="member">UNEXPECTED_MESSAGE</ref>;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>expected<sp/>a<sp/>FED_ID<sp/>message.<sp/>Got<sp/>%u<sp/>(see<sp/>rti.h).&quot;</highlight><highlight class="normal">,<sp/>buffer[0]);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Received<sp/>federate<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fed_id<sp/>=<sp/><ref refid="net__util_8c_1ab52445dc6792e1d40424c4e0edc18704" kindref="member">extract_ushort</ref>(buffer<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>federate<sp/>ID:<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>federation<sp/>ID.<sp/><sp/>First<sp/>read<sp/>the<sp/>length,<sp/>which<sp/>is<sp/>one<sp/>byte.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>federation_id_length<sp/>=<sp/>(size_t)buffer[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref>)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>federation_id_received[federation_id_length<sp/>+<sp/>1];<sp/></highlight><highlight class="comment">//<sp/>One<sp/>extra<sp/>for<sp/>null<sp/>terminator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>read<sp/>the<sp/>actual<sp/>federation<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>This<sp/>should<sp/>not<sp/>exit<sp/>on<sp/>error,<sp/>but<sp/>rather<sp/>just<sp/>reject<sp/>the<sp/>connection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a9d26e19c03e782593ba0f1791b7f35b5" kindref="member">read_from_socket_errexit</ref>(socket_id,<sp/>federation_id_length,</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)federation_id_received,</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>read<sp/>federation<sp/>id<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Terminate<sp/>the<sp/>string<sp/>with<sp/>a<sp/>null.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federation_id_received[federation_id_length]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>federation<sp/>ID:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>federation_id_received);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>the<sp/>received<sp/>federation<sp/>ID<sp/>to<sp/>mine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(<ref refid="rti_8c_1afb7337572879824d012d59222ea86eeb" kindref="member">federation_id</ref>,<sp/>federation_id_received,<sp/>federation_id_length)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Federation<sp/>IDs<sp/>do<sp/>not<sp/>match.<sp/>Send<sp/>back<sp/>a<sp/>REJECT<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;WARNING:<sp/>Federate<sp/>from<sp/>another<sp/>federation<sp/>%s<sp/>attempted<sp/>to<sp/>connect<sp/>to<sp/>RTI<sp/>in<sp/>federation<sp/>%s.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federation_id_received,</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1afb7337572879824d012d59222ea86eeb" kindref="member">federation_id</ref>);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_code<sp/>=<sp/><ref refid="rti_8h_1a653676d1f302fe08249af3dee78fa294" kindref="member">FEDERATION_ID_DOES_NOT_MATCH</ref>;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fed_id<sp/>&gt;=<sp/>NUMBER_OF_FEDERATES)<sp/>{</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Federate<sp/>ID<sp/>is<sp/>out<sp/>of<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>federate<sp/>ID<sp/>%d,<sp/>which<sp/>is<sp/>out<sp/>of<sp/>range.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_code<sp/>=<sp/><ref refid="rti_8h_1a5846fdcf4c92041f543b73e29e78aa21" kindref="member">FEDERATE_ID_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(federates[fed_id].state<sp/>!=<sp/>NOT_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>duplicate<sp/>federate<sp/>ID:<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_code<sp/>=<sp/><ref refid="rti_8h_1ae3bd830cd17cf0914b61d0516360abc1" kindref="member">FEDERATE_ID_IN_USE</ref>;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>FED_ID<sp/>message<sp/>was<sp/>not<sp/>exactly<sp/>right,<sp/>respond<sp/>with<sp/>a<sp/>REJECT,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>close<sp/>the<sp/>socket,<sp/>and<sp/>continue<sp/>waiting<sp/>for<sp/>federates<sp/>to<sp/>join.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_code<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>sending<sp/>REJECT.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>response[2];</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response[0]<sp/>=<sp/><ref refid="rti_8h_1a835f10dd1ab4bf9a80c4cd80ee6e3058" kindref="member">REJECT</ref>;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response[1]<sp/>=<sp/>error_code;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Ignore<sp/>errors<sp/>on<sp/>this<sp/>response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0e3b7299eccba74fcd7a27f37642dc7e" kindref="member">write_to_socket_errexit</ref>(socket_id,<sp/>2,<sp/>response,<sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>write<sp/>REJECT<sp/>message<sp/>on<sp/>the<sp/>socket.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(socket_id);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>federate.<sp/>Try<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>FED_ID<sp/>message<sp/>matches.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>address<sp/>information<sp/>for<sp/>federate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>IP<sp/>address<sp/>is<sp/>stored<sp/>here<sp/>as<sp/>an<sp/>in_addr<sp/>struct<sp/>(in<sp/>.server_ip_addr)<sp/>that<sp/>can<sp/>be<sp/>useful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>create<sp/>sockets<sp/>and<sp/>can<sp/>be<sp/>efficiently<sp/>sent<sp/>over<sp/>the<sp/>network.<sp/>If<sp/>VERBOSE<sp/>is<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>target<sp/>LF<sp/>program,<sp/>the<sp/>IP<sp/>address<sp/>is<sp/>also<sp/>stored<sp/>in<sp/>a<sp/>human<sp/>readable<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(stored<sp/>in<sp/>.server_hostname)<sp/>that<sp/>can<sp/>be<sp/>useful<sp/>for<sp/>log<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>convert<sp/>the<sp/>sockaddr<sp/>structure<sp/>into<sp/>a<sp/>sockaddr_in<sp/>that<sp/>contains<sp/>an<sp/>internet<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in*<sp/>pV4_addr<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in*)&amp;client_fd;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>extract<sp/>the<sp/>internet<sp/>address<sp/>(which<sp/>is<sp/>in<sp/>IPv4<sp/>format)<sp/>and<sp/>assign<sp/>it<sp/>as<sp/>the<sp/>federate&apos;s<sp/>socket<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federates[fed_id].server_ip_addr<sp/>=<sp/>pV4_addr-&gt;sin_addr;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LOG_LEVEL<sp/>&gt;<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>create<sp/>the<sp/>human<sp/>readable<sp/>format<sp/>and<sp/>copy<sp/>that<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>.server_hostname<sp/>field<sp/>of<sp/>the<sp/>federate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[INET_ADDRSTRLEN];</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inet_ntop(<sp/>AF_INET,<sp/>&amp;federates[fed_id].server_ip_addr,<sp/>str,<sp/>INET_ADDRSTRLEN<sp/>);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(federates[fed_id].server_hostname,<sp/>str,<sp/>INET_ADDRSTRLEN);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>got<sp/>address<sp/>%s<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>federates[fed_id].server_hostname,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federates[fed_id].socket<sp/>=<sp/>socket_id;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>federate&apos;s<sp/>state<sp/>as<sp/>pending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>it<sp/>is<sp/>waiting<sp/>for<sp/>the<sp/>start<sp/>time<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sent<sp/>by<sp/>the<sp/>RTI<sp/>before<sp/>beginning<sp/>its<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federates[fed_id].state<sp/>=<sp/>PENDING;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>responding<sp/>with<sp/>ACK<sp/>to<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>an<sp/>ACK<sp/>message<sp/>and<sp/>the<sp/>server&apos;s<sp/>TCP<sp/>port<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ack_message<sp/>=<sp/><ref refid="rti_8h_1a6f6489887e08bff4887d0bc5dcf214d8" kindref="member">ACK</ref>;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0e3b7299eccba74fcd7a27f37642dc7e" kindref="member">write_to_socket_errexit</ref>(socket_id,<sp/>1,<sp/>&amp;ack_message,</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>write<sp/>ACK<sp/>message<sp/>to<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next,<sp/>read<sp/>the<sp/>UDP_PORT<sp/>message<sp/>from<sp/>the<sp/>federate<sp/>regardless<sp/>of<sp/>the<sp/>status<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clock<sp/>synchronization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>waiting<sp/>for<sp/>UDP_PORT<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>response[1<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref>)];</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a9d26e19c03e782593ba0f1791b7f35b5" kindref="member">read_from_socket_errexit</ref>(socket_id,<sp/>1<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref>)<sp/>,<sp/>response,</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>read<sp/>UDP_PORT<sp/>message<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(response[0]<sp/>!=<sp/><ref refid="rti_8h_1a7342deb9bd9ebf195e550e2d8e7c38b4" kindref="member">UDP_PORT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>was<sp/>expecting<sp/>a<sp/>UDP_PORT<sp/>message<sp/>from<sp/>federate<sp/>%d.<sp/>Got<sp/>%u<sp/>instead.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Clock<sp/>sync<sp/>disabled.&quot;</highlight><highlight class="normal">,<sp/>fed_id,<sp/>response[0]);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federates[fed_id].clock_synchronization_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_LF_CLOCK_SYNC_INITIAL<sp/>//<sp/>If<sp/>no<sp/>initial<sp/>clock<sp/>sync,<sp/>no<sp/>need<sp/>perform<sp/>initial<sp/>clock<sp/>sync.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref><sp/>federate_UDP_port_number<sp/>=<sp/><ref refid="net__util_8c_1ab52445dc6792e1d40424c4e0edc18704" kindref="member">extract_ushort</ref>(&amp;(response[1]));</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>port<sp/>number<sp/>of<sp/>USHRT_MAX<sp/>means<sp/>initial<sp/>clock<sp/>sync<sp/>should<sp/>not<sp/>be<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(federate_UDP_port_number<sp/>!=<sp/>USHRT_MAX)<sp/>{</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>the<sp/>initialization<sp/>clock<sp/>synchronization<sp/>with<sp/>the<sp/>federate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>required<sp/>number<sp/>of<sp/>messages<sp/>for<sp/>clock<sp/>synchronization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="clock-sync_8h_1ab0eeaea19d6e5c9217a4eed928c32141" kindref="member">_LF_CLOCK_SYNC_EXCHANGES_PER_INTERVAL</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>RTI&apos;s<sp/>current<sp/>physical<sp/>time<sp/>T1<sp/>to<sp/>the<sp/>federate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1ae65499dda32878c5d123206e37732bf2" kindref="member">_lf_rti_send_physical_clock</ref>(<ref refid="rti_8h_1a31f24c0e324077c60e4ded8a30b15978" kindref="member">PHYSICAL_CLOCK_SYNC_MESSAGE_T1</ref>,<sp/>&amp;federates[fed_id],<sp/>TCP);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Listen<sp/>for<sp/>reply<sp/>message,<sp/>which<sp/>should<sp/>be<sp/>T3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>message_size<sp/>=<sp/>1<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[message_size];</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a9d26e19c03e782593ba0f1791b7f35b5" kindref="member">read_from_socket_errexit</ref>(socket_id,<sp/>message_size,<sp/>buffer,</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>to<sp/>federate<sp/>%d<sp/>unexpectedly<sp/>closed.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[0]<sp/>==<sp/>PHYSICAL_CLOCK_SYNC_MESSAGE_T3)<sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fed_id<sp/>=<sp/><ref refid="net__util_8c_1a2c3e1559ae8f31e111cedc00211edded" kindref="member">extract_int</ref>(&amp;(buffer[1]));</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(fed_id<sp/>&gt;<sp/>-1);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(fed_id<sp/>&lt;<sp/>65536);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>T3<sp/>clock<sp/>sync<sp/>message<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1ac5c5af408abe8a53506b2fb406046e14" kindref="member">handle_physical_clock_sync_message</ref>(&amp;federates[fed_id],<sp/>TCP);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a7389ef15e70a377a52086e6d6b956d70" kindref="member">error_print_and_exit</ref>(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>message<sp/>%u<sp/>from<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>buffer[0],<sp/>fed_id);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>finished<sp/>initial<sp/>clock<sp/>synchronization<sp/>with<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>fed_id);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_LF_CLOCK_SYNC_ON<sp/>//<sp/>If<sp/>no<sp/>runtime<sp/>clock<sp/>sync,<sp/>no<sp/>need<sp/>to<sp/>set<sp/>up<sp/>the<sp/>UDP<sp/>port.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(federate_UDP_port_number<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>UDP_addr<sp/>field<sp/>of<sp/>the<sp/>federate<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federates[fed_id].UDP_addr.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federates[fed_id].UDP_addr.sin_port<sp/>=<sp/>htons(federate_UDP_port_number);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federates[fed_id].UDP_addr.sin_addr<sp/>=<sp/>federates[fed_id].server_ip_addr;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>clock<sp/>sync<sp/>after<sp/>initial<sp/>round.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federates[fed_id].clock_synchronization_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>No<sp/>clock<sp/>synchronization<sp/>at<sp/>all.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clock<sp/>synchronization<sp/>is<sp/>universally<sp/>disabled<sp/>via<sp/>the<sp/>clock-sync<sp/>target<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(#define<sp/>_LF_CLOCK_SYNC<sp/>was<sp/>not<sp/>generated<sp/>for<sp/>the<sp/>RTI).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>federates<sp/>are<sp/>still<sp/>going<sp/>to<sp/>send<sp/>a<sp/>UDP_PORT<sp/>message<sp/>but<sp/>with<sp/>a<sp/>payload<sp/>(port)<sp/>of<sp/>-1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>federates[fed_id].clock_synchronization_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>thread<sp/>to<sp/>communicate<sp/>with<sp/>the<sp/>federate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>has<sp/>to<sp/>be<sp/>done<sp/>after<sp/>clock<sp/>synchronization<sp/>is<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>that<sp/>thread<sp/>may<sp/>end<sp/>up<sp/>attempting<sp/>to<sp/>handle<sp/>incoming<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>synchronization<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_create(&amp;(federates[fed_id].thread_id),<sp/>NULL,<sp/><ref refid="rti_8c_1a828e8b3024c90a3b1fcefec8288ca348" kindref="member">federate_thread_TCP</ref>,<sp/>&amp;(federates[fed_id]));</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>federates<sp/>have<sp/>connected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;All<sp/>federates<sp/>have<sp/>connected<sp/>to<sp/>RTI.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_LF_CLOCK_SYNC_ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>thread<sp/>that<sp/>performs<sp/>periodic<sp/>PTP<sp/>clock<sp/>synchronization<sp/>sessions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>over<sp/>the<sp/>UDP<sp/>channel,<sp/>but<sp/>only<sp/>if<sp/>the<sp/>UDP<sp/>channel<sp/>is<sp/>open.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="rti_8c_1aa409f62f662e5e53ee756ffaff4bddff" kindref="member">final_port_UDP</ref><sp/>!=<sp/>USHRT_MAX)<sp/>{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_create(&amp;clock_thread,<sp/>NULL,<sp/>clock_synchronization_thread,<sp/>NULL);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_LF_CLOCK_SYNC_ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="rti_8c_1a846f2f3985a60f5a7eef15b4430817d8" kindref="member">respond_to_erroneous_connections</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>nothing)<sp/>{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>an<sp/>incoming<sp/>connection<sp/>request.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr<sp/>client_fd;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>client_length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(client_fd);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>will<sp/>block<sp/>until<sp/>either<sp/>a<sp/>federate<sp/>attempts<sp/>to<sp/>connect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>close(socket_descriptor_TCP)<sp/>is<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>socket_id<sp/>=<sp/>accept(<ref refid="rti_8c_1a932b0f404c230fc102373b565ad39084" kindref="member">socket_descriptor_TCP</ref>,<sp/>&amp;client_fd,<sp/>&amp;client_length);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket_id<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="rti_8c_1a4d05fa7465d7e249d313bc8a943f48f6" kindref="member">all_federates_exited</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a1c6c13db619d78a55e0517405f226cc3" kindref="member">error_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI<sp/>received<sp/>an<sp/>unexpected<sp/>connection<sp/>request.<sp/>Federation<sp/>is<sp/>running.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>response[2];</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response[0]<sp/>=<sp/><ref refid="rti_8h_1a835f10dd1ab4bf9a80c4cd80ee6e3058" kindref="member">REJECT</ref>;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response[1]<sp/>=<sp/><ref refid="rti_8h_1a653676d1f302fe08249af3dee78fa294" kindref="member">FEDERATION_ID_DOES_NOT_MATCH</ref>;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>errors<sp/>on<sp/>this<sp/>response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="net__util_8c_1a0e3b7299eccba74fcd7a27f37642dc7e" kindref="member">write_to_socket_errexit</ref>(socket_id,<sp/>2,<sp/>response,</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RTI<sp/>failed<sp/>to<sp/>write<sp/>FEDERATION_ID_DOES_NOT_MATCH<sp/>to<sp/>erroneous<sp/>incoming<sp/>connection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(socket_id);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a683f606ece4429251c4e82e2ebcb9a70" kindref="member">initialize_federate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].id<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].socket<sp/>=<sp/>-1;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].clock_synchronization_enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].completed<sp/>=<sp/>NEVER_TAG;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].last_granted<sp/>=<sp/>NEVER_TAG;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].last_provisionally_granted<sp/>=<sp/>NEVER_TAG;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].next_event<sp/>=<sp/>NEVER_TAG;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].time_advance<sp/>=<sp/>NEVER;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].state<sp/>=<sp/>NOT_CONNECTED;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].upstream<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].upstream_delay<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].num_upstream<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].downstream<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].num_downstream<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].mode<sp/>=<sp/>REALTIME;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(federates[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].server_hostname<sp/>,</highlight><highlight class="stringliteral">&quot;localhost&quot;</highlight><highlight class="normal">,<sp/>INET_ADDRSTRLEN);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].server_ip_addr.s_addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].server_port<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>federates[id].requested_stop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize_clock()<sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>logical<sp/>time<sp/>to<sp/>match<sp/>physical<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>actualStartTime;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_gettime(_LF_CLOCK,<sp/>&amp;actualStartTime);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tag_8c_1afc91fb8110046fe2a5b10993c6618688" kindref="member">physical_start_time</ref><sp/>=<sp/>actualStartTime.tv_sec<sp/>*<sp/>BILLION<sp/>+<sp/>actualStartTime.tv_nsec;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>epoch<sp/>offset<sp/>to<sp/>zero<sp/>(see<sp/>tag.h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tag_8c_1ad4570173ff1498d16032fb37814b3f40" kindref="member">_lf_epoch_offset</ref><sp/>=<sp/>0LL;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_LF_CLOCK<sp/>!=<sp/>CLOCK_REALTIME)<sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>real_time_start;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock_gettime(CLOCK_REALTIME,<sp/>&amp;real_time_start);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tag_8h_1ad740f3189d2a477285138e682eafa8c5" kindref="member">instant_t</ref><sp/>real_time_start_ns<sp/>=<sp/>real_time_start.tv_sec<sp/>*<sp/>BILLION<sp/>+<sp/>real_time_start.tv_nsec;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>clock<sp/>is<sp/>not<sp/>CLOCK_REALTIME,<sp/>find<sp/>the<sp/>necessary<sp/>epoch<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tag_8c_1ad4570173ff1498d16032fb37814b3f40" kindref="member">_lf_epoch_offset</ref><sp/>=<sp/>real_time_start_ns<sp/>-<sp/><ref refid="tag_8c_1afc91fb8110046fe2a5b10993c6618688" kindref="member">physical_start_time</ref>;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a0a27a0fa2f8d9461204242121941696c" kindref="member">DEBUG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;Setting<sp/>epoch<sp/>offset<sp/>to<sp/>%lld.&quot;</highlight><highlight class="normal">,<sp/><ref refid="tag_8c_1ad4570173ff1498d16032fb37814b3f40" kindref="member">_lf_epoch_offset</ref>);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a24c617e67ab4d9fd53e0dbb37d8191e4" kindref="member">start_rti_server</ref>(<ref refid="reactor_8h_1a3fa7784c89589b49764048e9909d0e07" kindref="member">ushort</ref><sp/>port)<sp/>{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>specified_port<sp/>=<sp/>port;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>default<sp/>starting<sp/>port.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/><ref refid="rti_8h_1a3935567021a890f8b97f3d733ca5cfa1" kindref="member">STARTING_PORT</ref>;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>initialize_clock();</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>TCP<sp/>socket<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a932b0f404c230fc102373b565ad39084" kindref="member">socket_descriptor_TCP</ref><sp/>=<sp/><ref refid="rti_8c_1a8ca2d23d4d68874c4bf48559ed2362ec" kindref="member">create_server</ref>(specified_port,<sp/>port,<sp/>TCP);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8c_1ab831b6ca5cfb47d7d4b3f15ef8e0f053" kindref="member">info_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI:<sp/>Listening<sp/>for<sp/>federates.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>UDP<sp/>socket<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>get<sp/>the<sp/>final_port_TCP<sp/>+<sp/>1<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_LF_CLOCK_SYNC_ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a441e2e84bdd5cb0bc229623741d2bbed" kindref="member">socket_descriptor_UDP</ref><sp/>=<sp/><ref refid="rti_8c_1a8ca2d23d4d68874c4bf48559ed2362ec" kindref="member">create_server</ref>(specified_port,<sp/><ref refid="rti_8c_1a2fea97e0af4aff638a2cd067e924c6f4" kindref="member">final_port_TCP</ref><sp/>+<sp/>1,<sp/>UDP);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_LF_CLOCK_SYNC_ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a932b0f404c230fc102373b565ad39084" kindref="member">socket_descriptor_TCP</ref>;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a005cb43e8e6c7795c8f0db27e2424475" kindref="member">wait_for_federates</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>socket_descriptor)<sp/>{</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>connections<sp/>from<sp/>federates<sp/>and<sp/>create<sp/>a<sp/>thread<sp/>for<sp/>each.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rti_8c_1acf8907ccab075522f7b84de579d50030" kindref="member">connect_to_federates</ref>(socket_descriptor);</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>federates<sp/>have<sp/>connected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8c_1ab831b6ca5cfb47d7d4b3f15ef8e0f053" kindref="member">info_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI:<sp/>All<sp/>expected<sp/>federates<sp/>have<sp/>connected.<sp/>Starting<sp/>execution.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>socket<sp/>server<sp/>will<sp/>not<sp/>continue<sp/>to<sp/>accept<sp/>connections<sp/>after<sp/>all<sp/>the<sp/>federates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>joined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>some<sp/>other<sp/>federation&apos;s<sp/>federates<sp/>are<sp/>trying<sp/>to<sp/>join<sp/>the<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>federation,<sp/>need<sp/>to<sp/>respond.<sp/>Start<sp/>a<sp/>separate<sp/>thread<sp/>to<sp/>do<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/>responder_thread;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_create(&amp;responder_thread,<sp/>NULL,<sp/><ref refid="rti_8c_1a846f2f3985a60f5a7eef15b4430817d8" kindref="member">respond_to_erroneous_connections</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>federate<sp/>threads<sp/>to<sp/>exit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>thread_exit_status;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUMBER_OF_FEDERATES;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1ab831b6ca5cfb47d7d4b3f15ef8e0f053" kindref="member">info_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI:<sp/>Waiting<sp/>for<sp/>thread<sp/>handling<sp/>federate<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/>federates[i].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_join(federates[i].thread_id,<sp/>&amp;thread_exit_status);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1ab831b6ca5cfb47d7d4b3f15ef8e0f053" kindref="member">info_print</ref>(</highlight><highlight class="stringliteral">&quot;RTI:<sp/>Federate<sp/>%d<sp/>thread<sp/>exited.&quot;</highlight><highlight class="normal">,<sp/>federates[i].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rti_8c_1a4d05fa7465d7e249d313bc8a943f48f6" kindref="member">all_federates_exited</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shutdown<sp/>and<sp/>close<sp/>the<sp/>socket<sp/>so<sp/>that<sp/>the<sp/>accept()<sp/>call<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>respond_to_erroneous_connections<sp/>returns.<sp/>That<sp/>thread<sp/>should<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>all_federates_exited<sp/>and<sp/>it<sp/>should<sp/>exit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shutdown(socket_descriptor,<sp/>SHUT_RDWR))<sp/>{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;On<sp/>shut<sp/>down<sp/>TCP<sp/>socket,<sp/>received<sp/>reply:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>close(socket_descriptor);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************<sp/>FIXME:<sp/>The<sp/>following<sp/>is<sp/>probably<sp/>not<sp/>needed.</highlight></codeline>
<codeline lineno="1786"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>above<sp/>shutdown<sp/>and<sp/>close<sp/>should<sp/>do<sp/>the<sp/>job.</highlight></codeline>
<codeline lineno="1787"><highlight class="comment"></highlight></codeline>
<codeline lineno="1788"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>NOTE:<sp/>Apparently,<sp/>closing<sp/>the<sp/>socket<sp/>will<sp/>not<sp/>necessarily</highlight></codeline>
<codeline lineno="1789"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>cause<sp/>the<sp/>respond_to_erroneous_connections<sp/>accept()<sp/>call<sp/>to<sp/>return,</highlight></codeline>
<codeline lineno="1790"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>so<sp/>instead,<sp/>we<sp/>connect<sp/>here<sp/>so<sp/>that<sp/>it<sp/>can<sp/>check<sp/>the<sp/>all_federates_exited</highlight></codeline>
<codeline lineno="1791"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>variable.</highlight></codeline>
<codeline lineno="1792"><highlight class="comment"></highlight></codeline>
<codeline lineno="1793"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Create<sp/>an<sp/>IPv4<sp/>socket<sp/>for<sp/>TCP<sp/>(not<sp/>UDP)<sp/>communication<sp/>over<sp/>IP<sp/>(0).</highlight></codeline>
<codeline lineno="1794"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>tmp_socket<sp/>=<sp/>socket(AF_INET<sp/>,<sp/>SOCK_STREAM<sp/>,<sp/>0);</highlight></codeline>
<codeline lineno="1795"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>If<sp/>creating<sp/>the<sp/>socket<sp/>fails,<sp/>assume<sp/>the<sp/>thread<sp/>has<sp/>already<sp/>exited.</highlight></codeline>
<codeline lineno="1796"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(tmp_socket<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1797"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>hostent<sp/>*server<sp/>=<sp/>gethostbyname(&quot;localhost&quot;);</highlight></codeline>
<codeline lineno="1798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(server<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Server<sp/>file<sp/>descriptor.</highlight></codeline>
<codeline lineno="1800"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>sockaddr_in<sp/>server_fd;</highlight></codeline>
<codeline lineno="1801"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Zero<sp/>out<sp/>the<sp/>server_fd<sp/>struct.</highlight></codeline>
<codeline lineno="1802"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bzero((char<sp/>*)<sp/>&amp;server_fd,<sp/>sizeof(server_fd));</highlight></codeline>
<codeline lineno="1803"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>up<sp/>the<sp/>server_fd<sp/>fields.</highlight></codeline>
<codeline lineno="1804"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_fd.sin_family<sp/>=<sp/>AF_INET;<sp/><sp/><sp/><sp/>//<sp/>IPv4</highlight></codeline>
<codeline lineno="1805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcopy((char<sp/>*)server-&gt;h_addr,</highlight></codeline>
<codeline lineno="1806"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(char<sp/>*)&amp;server_fd.sin_addr.s_addr,</highlight></codeline>
<codeline lineno="1807"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server-&gt;h_length);</highlight></codeline>
<codeline lineno="1808"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Convert<sp/>the<sp/>port<sp/>number<sp/>from<sp/>host<sp/>byte<sp/>order<sp/>to<sp/>network<sp/>byte<sp/>order.</highlight></codeline>
<codeline lineno="1809"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_fd.sin_port<sp/>=<sp/>htons(final_port_TCP);</highlight></codeline>
<codeline lineno="1810"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect(</highlight></codeline>
<codeline lineno="1811"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_socket,</highlight></codeline>
<codeline lineno="1812"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(struct<sp/>sockaddr<sp/>*)&amp;server_fd,</highlight></codeline>
<codeline lineno="1813"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(server_fd));</highlight></codeline>
<codeline lineno="1814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(tmp_socket);</highlight></codeline>
<codeline lineno="1815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1816"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1817"><highlight class="comment"></highlight></codeline>
<codeline lineno="1818"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>NOTE:<sp/>In<sp/>all<sp/>common<sp/>TCP/IP<sp/>stacks,<sp/>there<sp/>is<sp/>a<sp/>time<sp/>period,</highlight></codeline>
<codeline lineno="1819"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>typically<sp/>between<sp/>30<sp/>and<sp/>120<sp/>seconds,<sp/>called<sp/>the<sp/>TIME_WAIT<sp/>period,</highlight></codeline>
<codeline lineno="1820"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>before<sp/>the<sp/>port<sp/>is<sp/>released<sp/>after<sp/>this<sp/>close.<sp/>This<sp/>is<sp/>because</highlight></codeline>
<codeline lineno="1821"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>the<sp/>OS<sp/>is<sp/>preventing<sp/>another<sp/>program<sp/>from<sp/>accidentally<sp/>receiving</highlight></codeline>
<codeline lineno="1822"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>duplicated<sp/>packets<sp/>intended<sp/>for<sp/>this<sp/>program.</highlight></codeline>
<codeline lineno="1823"><highlight class="comment"><sp/><sp/><sp/><sp/>close(socket_descriptor);</highlight></codeline>
<codeline lineno="1824"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="rti_8c_1a441e2e84bdd5cb0bc229623741d2bbed" kindref="member">socket_descriptor_UDP</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shutdown(<ref refid="rti_8c_1a441e2e84bdd5cb0bc229623741d2bbed" kindref="member">socket_descriptor_UDP</ref>,<sp/>SHUT_RDWR))<sp/>{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a02ab3aea33a20e71b0f50923d3b222a7" kindref="member">LOG_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;On<sp/>shut<sp/>down<sp/>UDP<sp/>socket,<sp/>received<sp/>reply:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(<ref refid="rti_8c_1a441e2e84bdd5cb0bc229623741d2bbed" kindref="member">socket_descriptor_UDP</ref>);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1aeb5079a0bdbc96962460a991aa880725" kindref="member">usage</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])<sp/>{</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nCommand-line<sp/>arguments:<sp/>\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>-i,<sp/>--id<sp/>&lt;n&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>The<sp/>ID<sp/>of<sp/>the<sp/>federation<sp/>that<sp/>this<sp/>RTI<sp/>will<sp/>control.\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Command<sp/>given:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>&quot;</highlight><highlight class="normal">,<sp/>argv[i]);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rti_8c_1a8de011aeee37cd0347b5e01d7e3baed4" kindref="member">process_args</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])<sp/>{</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[i],<sp/></highlight><highlight class="stringliteral">&quot;-i&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>strcmp(argv[i],<sp/></highlight><highlight class="stringliteral">&quot;--id&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>i<sp/>+<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>--id<sp/>needs<sp/>a<sp/>string<sp/>argument.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1aeb5079a0bdbc96962460a991aa880725" kindref="member">usage</ref>(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Federation<sp/>ID<sp/>at<sp/>RTI:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>argv[i]);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1afb7337572879824d012d59222ea86eeb" kindref="member">federation_id</ref><sp/>=<sp/>argv[i++];</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Unrecognized<sp/>command-line<sp/>argument:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>argv[i]);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rti_8c_1aeb5079a0bdbc96962460a991aa880725" kindref="member">usage</ref>(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/shaokai/lingua-franca-master/git/lingua-franca/org.lflang/src/lib/core/rti.c"/>
  </compounddef>
</doxygen>
